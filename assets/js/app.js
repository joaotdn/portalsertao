/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (() => { // webpackBootstrap
/******/ 	var __webpack_modules__ = ({

/***/ "./src/js/app.js":
/*!***********************!*\
  !*** ./src/js/app.js ***!
  \***********************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _components_userLocation__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./components/userLocation */ \"./src/js/components/userLocation.js\");\n/* harmony import */ var _components_userLocation__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_components_userLocation__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _components_weather__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./components/weather */ \"./src/js/components/weather.js\");\n/* harmony import */ var _components_weather__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_components_weather__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var _components_getDate__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./components/getDate */ \"./src/js/components/getDate.js\");\n/* harmony import */ var _components_getDate__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(_components_getDate__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var _components_offcanvas__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./components/offcanvas */ \"./src/js/components/offcanvas.js\");\n/* harmony import */ var _components_offcanvas__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(_components_offcanvas__WEBPACK_IMPORTED_MODULE_3__);\n/* harmony import */ var _components_scrollMenu__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./components/scrollMenu */ \"./src/js/components/scrollMenu.js\");\n/* harmony import */ var _components_scrollMenu__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(_components_scrollMenu__WEBPACK_IMPORTED_MODULE_4__);\n/* harmony import */ var _components_cycle2__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./components/cycle2 */ \"./src/js/components/cycle2.js\");\n/* harmony import */ var _components_cycle2__WEBPACK_IMPORTED_MODULE_5___default = /*#__PURE__*/__webpack_require__.n(_components_cycle2__WEBPACK_IMPORTED_MODULE_5__);\n/* harmony import */ var _components_lastNews__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./components/lastNews */ \"./src/js/components/lastNews.js\");\n/* harmony import */ var _components_lastNews__WEBPACK_IMPORTED_MODULE_6___default = /*#__PURE__*/__webpack_require__.n(_components_lastNews__WEBPACK_IMPORTED_MODULE_6__);\n/* harmony import */ var _components_slideFeatures__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./components/slideFeatures */ \"./src/js/components/slideFeatures.js\");\n/* harmony import */ var _components_slideFeatures__WEBPACK_IMPORTED_MODULE_7___default = /*#__PURE__*/__webpack_require__.n(_components_slideFeatures__WEBPACK_IMPORTED_MODULE_7__);\n/* harmony import */ var _components_indicators__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./components/indicators */ \"./src/js/components/indicators.js\");\n/* harmony import */ var _components_indicators__WEBPACK_IMPORTED_MODULE_8___default = /*#__PURE__*/__webpack_require__.n(_components_indicators__WEBPACK_IMPORTED_MODULE_8__);\n/* harmony import */ var _components_videosGalery__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./components/videosGalery */ \"./src/js/components/videosGalery.js\");\n/* harmony import */ var _components_videosGalery__WEBPACK_IMPORTED_MODULE_9___default = /*#__PURE__*/__webpack_require__.n(_components_videosGalery__WEBPACK_IMPORTED_MODULE_9__);\n/* harmony import */ var _components_radioPlayer__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./components/radioPlayer */ \"./src/js/components/radioPlayer.js\");\n/* harmony import */ var _components_radioPlayer__WEBPACK_IMPORTED_MODULE_10___default = /*#__PURE__*/__webpack_require__.n(_components_radioPlayer__WEBPACK_IMPORTED_MODULE_10__);\n/* harmony import */ var _components_fontSize__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ./components/fontSize */ \"./src/js/components/fontSize.js\");\n/* harmony import */ var _components_fontSize__WEBPACK_IMPORTED_MODULE_11___default = /*#__PURE__*/__webpack_require__.n(_components_fontSize__WEBPACK_IMPORTED_MODULE_11__);\n\n\n\n\n\n\n\n\n\n\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvanMvYXBwLmpzLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vcG9ydGFsZG9lc3BpYW8vLi9zcmMvanMvYXBwLmpzP2NkMTgiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IFwiLi9jb21wb25lbnRzL3VzZXJMb2NhdGlvblwiO1xuaW1wb3J0IFwiLi9jb21wb25lbnRzL3dlYXRoZXJcIjtcbmltcG9ydCBcIi4vY29tcG9uZW50cy9nZXREYXRlXCI7XG5pbXBvcnQgXCIuL2NvbXBvbmVudHMvb2ZmY2FudmFzXCI7XG5pbXBvcnQgXCIuL2NvbXBvbmVudHMvc2Nyb2xsTWVudVwiO1xuaW1wb3J0IFwiLi9jb21wb25lbnRzL2N5Y2xlMlwiO1xuaW1wb3J0IFwiLi9jb21wb25lbnRzL2xhc3ROZXdzXCI7XG5pbXBvcnQgXCIuL2NvbXBvbmVudHMvc2xpZGVGZWF0dXJlc1wiO1xuaW1wb3J0IFwiLi9jb21wb25lbnRzL2luZGljYXRvcnNcIjtcbmltcG9ydCBcIi4vY29tcG9uZW50cy92aWRlb3NHYWxlcnlcIjtcbmltcG9ydCBcIi4vY29tcG9uZW50cy9yYWRpb1BsYXllclwiO1xuaW1wb3J0IFwiLi9jb21wb25lbnRzL2ZvbnRTaXplXCI7Il0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./src/js/app.js\n");

/***/ }),

/***/ "./src/js/components/cycle2.js":
/*!*************************************!*\
  !*** ./src/js/components/cycle2.js ***!
  \*************************************/
/***/ (() => {

eval("function _typeof(obj) { \"@babel/helpers - typeof\"; return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }, _typeof(obj); }\n\n/*!\n* jQuery Cycle2; version: 2.1.6 build: 20141007\n* http://jquery.malsup.com/cycle2/\n* Copyright (c) 2014 M. Alsup; Dual licensed: MIT/GPL\n*/\n!function (a) {\n  \"use strict\";\n\n  function b(a) {\n    return (a || \"\").toLowerCase();\n  }\n\n  var c = \"2.1.6\";\n  a.fn.cycle = function (c) {\n    var d;\n    return 0 !== this.length || a.isReady ? this.each(function () {\n      var d,\n          e,\n          f,\n          g,\n          h = a(this),\n          i = a.fn.cycle.log;\n\n      if (!h.data(\"cycle.opts\")) {\n        (h.data(\"cycle-log\") === !1 || c && c.log === !1 || e && e.log === !1) && (i = a.noop), i(\"--c2 init--\"), d = h.data();\n\n        for (var j in d) {\n          d.hasOwnProperty(j) && /^cycle[A-Z]+/.test(j) && (g = d[j], f = j.match(/^cycle(.*)/)[1].replace(/^[A-Z]/, b), i(f + \":\", g, \"(\" + _typeof(g) + \")\"), d[f] = g);\n        }\n\n        e = a.extend({}, a.fn.cycle.defaults, d, c || {}), e.timeoutId = 0, e.paused = e.paused || !1, e.container = h, e._maxZ = e.maxZ, e.API = a.extend({\n          _container: h\n        }, a.fn.cycle.API), e.API.log = i, e.API.trigger = function (a, b) {\n          return e.container.trigger(a, b), e.API;\n        }, h.data(\"cycle.opts\", e), h.data(\"cycle.API\", e.API), e.API.trigger(\"cycle-bootstrap\", [e, e.API]), e.API.addInitialSlides(), e.API.preInitSlideshow(), e.slides.length && e.API.initSlideshow();\n      }\n    }) : (d = {\n      s: this.selector,\n      c: this.context\n    }, a.fn.cycle.log(\"requeuing slideshow (dom not ready)\"), a(function () {\n      a(d.s, d.c).cycle(c);\n    }), this);\n  }, a.fn.cycle.API = {\n    opts: function opts() {\n      return this._container.data(\"cycle.opts\");\n    },\n    addInitialSlides: function addInitialSlides() {\n      var b = this.opts(),\n          c = b.slides;\n      b.slideCount = 0, b.slides = a(), c = c.jquery ? c : b.container.find(c), b.random && c.sort(function () {\n        return Math.random() - .5;\n      }), b.API.add(c);\n    },\n    preInitSlideshow: function preInitSlideshow() {\n      var b = this.opts();\n      b.API.trigger(\"cycle-pre-initialize\", [b]);\n      var c = a.fn.cycle.transitions[b.fx];\n      c && a.isFunction(c.preInit) && c.preInit(b), b._preInitialized = !0;\n    },\n    postInitSlideshow: function postInitSlideshow() {\n      var b = this.opts();\n      b.API.trigger(\"cycle-post-initialize\", [b]);\n      var c = a.fn.cycle.transitions[b.fx];\n      c && a.isFunction(c.postInit) && c.postInit(b);\n    },\n    initSlideshow: function initSlideshow() {\n      var b,\n          c = this.opts(),\n          d = c.container;\n      c.API.calcFirstSlide(), \"static\" == c.container.css(\"position\") && c.container.css(\"position\", \"relative\"), a(c.slides[c.currSlide]).css({\n        opacity: 1,\n        display: \"block\",\n        visibility: \"visible\"\n      }), c.API.stackSlides(c.slides[c.currSlide], c.slides[c.nextSlide], !c.reverse), c.pauseOnHover && (c.pauseOnHover !== !0 && (d = a(c.pauseOnHover)), d.hover(function () {\n        c.API.pause(!0);\n      }, function () {\n        c.API.resume(!0);\n      })), c.timeout && (b = c.API.getSlideOpts(c.currSlide), c.API.queueTransition(b, b.timeout + c.delay)), c._initialized = !0, c.API.updateView(!0), c.API.trigger(\"cycle-initialized\", [c]), c.API.postInitSlideshow();\n    },\n    pause: function pause(b) {\n      var c = this.opts(),\n          d = c.API.getSlideOpts(),\n          e = c.hoverPaused || c.paused;\n      b ? c.hoverPaused = !0 : c.paused = !0, e || (c.container.addClass(\"cycle-paused\"), c.API.trigger(\"cycle-paused\", [c]).log(\"cycle-paused\"), d.timeout && (clearTimeout(c.timeoutId), c.timeoutId = 0, c._remainingTimeout -= a.now() - c._lastQueue, (c._remainingTimeout < 0 || isNaN(c._remainingTimeout)) && (c._remainingTimeout = void 0)));\n    },\n    resume: function resume(a) {\n      var b = this.opts(),\n          c = !b.hoverPaused && !b.paused;\n      a ? b.hoverPaused = !1 : b.paused = !1, c || (b.container.removeClass(\"cycle-paused\"), 0 === b.slides.filter(\":animated\").length && b.API.queueTransition(b.API.getSlideOpts(), b._remainingTimeout), b.API.trigger(\"cycle-resumed\", [b, b._remainingTimeout]).log(\"cycle-resumed\"));\n    },\n    add: function add(b, c) {\n      var d,\n          e = this.opts(),\n          f = e.slideCount,\n          g = !1;\n      \"string\" == a.type(b) && (b = a.trim(b)), a(b).each(function () {\n        var b,\n            d = a(this);\n        c ? e.container.prepend(d) : e.container.append(d), e.slideCount++, b = e.API.buildSlideOpts(d), e.slides = c ? a(d).add(e.slides) : e.slides.add(d), e.API.initSlide(b, d, --e._maxZ), d.data(\"cycle.opts\", b), e.API.trigger(\"cycle-slide-added\", [e, b, d]);\n      }), e.API.updateView(!0), g = e._preInitialized && 2 > f && e.slideCount >= 1, g && (e._initialized ? e.timeout && (d = e.slides.length, e.nextSlide = e.reverse ? d - 1 : 1, e.timeoutId || e.API.queueTransition(e)) : e.API.initSlideshow());\n    },\n    calcFirstSlide: function calcFirstSlide() {\n      var a,\n          b = this.opts();\n      a = parseInt(b.startingSlide || 0, 10), (a >= b.slides.length || 0 > a) && (a = 0), b.currSlide = a, b.reverse ? (b.nextSlide = a - 1, b.nextSlide < 0 && (b.nextSlide = b.slides.length - 1)) : (b.nextSlide = a + 1, b.nextSlide == b.slides.length && (b.nextSlide = 0));\n    },\n    calcNextSlide: function calcNextSlide() {\n      var a,\n          b = this.opts();\n      b.reverse ? (a = b.nextSlide - 1 < 0, b.nextSlide = a ? b.slideCount - 1 : b.nextSlide - 1, b.currSlide = a ? 0 : b.nextSlide + 1) : (a = b.nextSlide + 1 == b.slides.length, b.nextSlide = a ? 0 : b.nextSlide + 1, b.currSlide = a ? b.slides.length - 1 : b.nextSlide - 1);\n    },\n    calcTx: function calcTx(b, c) {\n      var d,\n          e = b;\n      return e._tempFx ? d = a.fn.cycle.transitions[e._tempFx] : c && e.manualFx && (d = a.fn.cycle.transitions[e.manualFx]), d || (d = a.fn.cycle.transitions[e.fx]), e._tempFx = null, this.opts()._tempFx = null, d || (d = a.fn.cycle.transitions.fade, e.API.log('Transition \"' + e.fx + '\" not found.  Using fade.')), d;\n    },\n    prepareTx: function prepareTx(a, b) {\n      var c,\n          d,\n          e,\n          f,\n          g,\n          h = this.opts();\n      return h.slideCount < 2 ? void (h.timeoutId = 0) : (!a || h.busy && !h.manualTrump || (h.API.stopTransition(), h.busy = !1, clearTimeout(h.timeoutId), h.timeoutId = 0), void (h.busy || (0 !== h.timeoutId || a) && (d = h.slides[h.currSlide], e = h.slides[h.nextSlide], f = h.API.getSlideOpts(h.nextSlide), g = h.API.calcTx(f, a), h._tx = g, a && void 0 !== f.manualSpeed && (f.speed = f.manualSpeed), h.nextSlide != h.currSlide && (a || !h.paused && !h.hoverPaused && h.timeout) ? (h.API.trigger(\"cycle-before\", [f, d, e, b]), g.before && g.before(f, d, e, b), c = function c() {\n        h.busy = !1, h.container.data(\"cycle.opts\") && (g.after && g.after(f, d, e, b), h.API.trigger(\"cycle-after\", [f, d, e, b]), h.API.queueTransition(f), h.API.updateView(!0));\n      }, h.busy = !0, g.transition ? g.transition(f, d, e, b, c) : h.API.doTransition(f, d, e, b, c), h.API.calcNextSlide(), h.API.updateView()) : h.API.queueTransition(f))));\n    },\n    doTransition: function doTransition(b, c, d, e, f) {\n      var g = b,\n          h = a(c),\n          i = a(d),\n          j = function j() {\n        i.animate(g.animIn || {\n          opacity: 1\n        }, g.speed, g.easeIn || g.easing, f);\n      };\n\n      i.css(g.cssBefore || {}), h.animate(g.animOut || {}, g.speed, g.easeOut || g.easing, function () {\n        h.css(g.cssAfter || {}), g.sync || j();\n      }), g.sync && j();\n    },\n    queueTransition: function queueTransition(b, c) {\n      var d = this.opts(),\n          e = void 0 !== c ? c : b.timeout;\n      return 0 === d.nextSlide && 0 === --d.loop ? (d.API.log(\"terminating; loop=0\"), d.timeout = 0, e ? setTimeout(function () {\n        d.API.trigger(\"cycle-finished\", [d]);\n      }, e) : d.API.trigger(\"cycle-finished\", [d]), void (d.nextSlide = d.currSlide)) : void 0 !== d.continueAuto && (d.continueAuto === !1 || a.isFunction(d.continueAuto) && d.continueAuto() === !1) ? (d.API.log(\"terminating automatic transitions\"), d.timeout = 0, void (d.timeoutId && clearTimeout(d.timeoutId))) : void (e && (d._lastQueue = a.now(), void 0 === c && (d._remainingTimeout = b.timeout), d.paused || d.hoverPaused || (d.timeoutId = setTimeout(function () {\n        d.API.prepareTx(!1, !d.reverse);\n      }, e))));\n    },\n    stopTransition: function stopTransition() {\n      var a = this.opts();\n      a.slides.filter(\":animated\").length && (a.slides.stop(!1, !0), a.API.trigger(\"cycle-transition-stopped\", [a])), a._tx && a._tx.stopTransition && a._tx.stopTransition(a);\n    },\n    advanceSlide: function advanceSlide(a) {\n      var b = this.opts();\n      return clearTimeout(b.timeoutId), b.timeoutId = 0, b.nextSlide = b.currSlide + a, b.nextSlide < 0 ? b.nextSlide = b.slides.length - 1 : b.nextSlide >= b.slides.length && (b.nextSlide = 0), b.API.prepareTx(!0, a >= 0), !1;\n    },\n    buildSlideOpts: function buildSlideOpts(c) {\n      var d,\n          e,\n          f = this.opts(),\n          g = c.data() || {};\n\n      for (var h in g) {\n        g.hasOwnProperty(h) && /^cycle[A-Z]+/.test(h) && (d = g[h], e = h.match(/^cycle(.*)/)[1].replace(/^[A-Z]/, b), f.API.log(\"[\" + (f.slideCount - 1) + \"]\", e + \":\", d, \"(\" + _typeof(d) + \")\"), g[e] = d);\n      }\n\n      g = a.extend({}, a.fn.cycle.defaults, f, g), g.slideNum = f.slideCount;\n\n      try {\n        delete g.API, delete g.slideCount, delete g.currSlide, delete g.nextSlide, delete g.slides;\n      } catch (i) {}\n\n      return g;\n    },\n    getSlideOpts: function getSlideOpts(b) {\n      var c = this.opts();\n      void 0 === b && (b = c.currSlide);\n      var d = c.slides[b],\n          e = a(d).data(\"cycle.opts\");\n      return a.extend({}, c, e);\n    },\n    initSlide: function initSlide(b, c, d) {\n      var e = this.opts();\n      c.css(b.slideCss || {}), d > 0 && c.css(\"zIndex\", d), isNaN(b.speed) && (b.speed = a.fx.speeds[b.speed] || a.fx.speeds._default), b.sync || (b.speed = b.speed / 2), c.addClass(e.slideClass);\n    },\n    updateView: function updateView(a, b) {\n      var c = this.opts();\n\n      if (c._initialized) {\n        var d = c.API.getSlideOpts(),\n            e = c.slides[c.currSlide];\n        !a && b !== !0 && (c.API.trigger(\"cycle-update-view-before\", [c, d, e]), c.updateView < 0) || (c.slideActiveClass && c.slides.removeClass(c.slideActiveClass).eq(c.currSlide).addClass(c.slideActiveClass), a && c.hideNonActive && c.slides.filter(\":not(.\" + c.slideActiveClass + \")\").css(\"visibility\", \"hidden\"), 0 === c.updateView && setTimeout(function () {\n          c.API.trigger(\"cycle-update-view\", [c, d, e, a]);\n        }, d.speed / (c.sync ? 2 : 1)), 0 !== c.updateView && c.API.trigger(\"cycle-update-view\", [c, d, e, a]), a && c.API.trigger(\"cycle-update-view-after\", [c, d, e]));\n      }\n    },\n    getComponent: function getComponent(b) {\n      var c = this.opts(),\n          d = c[b];\n      return \"string\" == typeof d ? /^\\s*[\\>|\\+|~]/.test(d) ? c.container.find(d) : a(d) : d.jquery ? d : a(d);\n    },\n    stackSlides: function stackSlides(b, c, d) {\n      var e = this.opts();\n      b || (b = e.slides[e.currSlide], c = e.slides[e.nextSlide], d = !e.reverse), a(b).css(\"zIndex\", e.maxZ);\n      var f,\n          g = e.maxZ - 2,\n          h = e.slideCount;\n\n      if (d) {\n        for (f = e.currSlide + 1; h > f; f++) {\n          a(e.slides[f]).css(\"zIndex\", g--);\n        }\n\n        for (f = 0; f < e.currSlide; f++) {\n          a(e.slides[f]).css(\"zIndex\", g--);\n        }\n      } else {\n        for (f = e.currSlide - 1; f >= 0; f--) {\n          a(e.slides[f]).css(\"zIndex\", g--);\n        }\n\n        for (f = h - 1; f > e.currSlide; f--) {\n          a(e.slides[f]).css(\"zIndex\", g--);\n        }\n      }\n\n      a(c).css(\"zIndex\", e.maxZ - 1);\n    },\n    getSlideIndex: function getSlideIndex(a) {\n      return this.opts().slides.index(a);\n    }\n  }, a.fn.cycle.log = function () {\n    window.console && console.log && console.log(\"[cycle2] \" + Array.prototype.join.call(arguments, \" \"));\n  }, a.fn.cycle.version = function () {\n    return \"Cycle2: \" + c;\n  }, a.fn.cycle.transitions = {\n    custom: {},\n    none: {\n      before: function before(a, b, c, d) {\n        a.API.stackSlides(c, b, d), a.cssBefore = {\n          opacity: 1,\n          visibility: \"visible\",\n          display: \"block\"\n        };\n      }\n    },\n    fade: {\n      before: function before(b, c, d, e) {\n        var f = b.API.getSlideOpts(b.nextSlide).slideCss || {};\n        b.API.stackSlides(c, d, e), b.cssBefore = a.extend(f, {\n          opacity: 0,\n          visibility: \"visible\",\n          display: \"block\"\n        }), b.animIn = {\n          opacity: 1\n        }, b.animOut = {\n          opacity: 0\n        };\n      }\n    },\n    fadeout: {\n      before: function before(b, c, d, e) {\n        var f = b.API.getSlideOpts(b.nextSlide).slideCss || {};\n        b.API.stackSlides(c, d, e), b.cssBefore = a.extend(f, {\n          opacity: 1,\n          visibility: \"visible\",\n          display: \"block\"\n        }), b.animOut = {\n          opacity: 0\n        };\n      }\n    },\n    scrollHorz: {\n      before: function before(a, b, c, d) {\n        a.API.stackSlides(b, c, d);\n        var e = a.container.css(\"overflow\", \"hidden\").width();\n        a.cssBefore = {\n          left: d ? e : -e,\n          top: 0,\n          opacity: 1,\n          visibility: \"visible\",\n          display: \"block\"\n        }, a.cssAfter = {\n          zIndex: a._maxZ - 2,\n          left: 0\n        }, a.animIn = {\n          left: 0\n        }, a.animOut = {\n          left: d ? -e : e\n        };\n      }\n    }\n  }, a.fn.cycle.defaults = {\n    allowWrap: !0,\n    autoSelector: \".cycle-slideshow[data-cycle-auto-init!=false]\",\n    delay: 0,\n    easing: null,\n    fx: \"fade\",\n    hideNonActive: !0,\n    loop: 0,\n    manualFx: void 0,\n    manualSpeed: void 0,\n    manualTrump: !0,\n    maxZ: 100,\n    pauseOnHover: !1,\n    reverse: !1,\n    slideActiveClass: \"cycle-slide-active\",\n    slideClass: \"cycle-slide\",\n    slideCss: {\n      position: \"absolute\",\n      top: 0,\n      left: 0\n    },\n    slides: \"> img\",\n    speed: 500,\n    startingSlide: 0,\n    sync: !0,\n    timeout: 4e3,\n    updateView: 0\n  }, a(document).ready(function () {\n    a(a.fn.cycle.defaults.autoSelector).cycle();\n  });\n}(jQuery),\n/*! Cycle2 autoheight plugin; Copyright (c) M.Alsup, 2012; version: 20130913 */\nfunction (a) {\n  \"use strict\";\n\n  function b(b, d) {\n    var e,\n        f,\n        g,\n        h = d.autoHeight;\n    if (\"container\" == h) f = a(d.slides[d.currSlide]).outerHeight(), d.container.height(f);else if (d._autoHeightRatio) d.container.height(d.container.width() / d._autoHeightRatio);else if (\"calc\" === h || \"number\" == a.type(h) && h >= 0) {\n      if (g = \"calc\" === h ? c(b, d) : h >= d.slides.length ? 0 : h, g == d._sentinelIndex) return;\n      d._sentinelIndex = g, d._sentinel && d._sentinel.remove(), e = a(d.slides[g].cloneNode(!0)), e.removeAttr(\"id name rel\").find(\"[id],[name],[rel]\").removeAttr(\"id name rel\"), e.css({\n        position: \"static\",\n        visibility: \"hidden\",\n        display: \"block\"\n      }).prependTo(d.container).addClass(\"cycle-sentinel cycle-slide\").removeClass(\"cycle-slide-active\"), e.find(\"*\").css(\"visibility\", \"hidden\"), d._sentinel = e;\n    }\n  }\n\n  function c(b, c) {\n    var d = 0,\n        e = -1;\n    return c.slides.each(function (b) {\n      var c = a(this).height();\n      c > e && (e = c, d = b);\n    }), d;\n  }\n\n  function d(b, c, d, e) {\n    var f = a(e).outerHeight();\n    c.container.animate({\n      height: f\n    }, c.autoHeightSpeed, c.autoHeightEasing);\n  }\n\n  function e(c, f) {\n    f._autoHeightOnResize && (a(window).off(\"resize orientationchange\", f._autoHeightOnResize), f._autoHeightOnResize = null), f.container.off(\"cycle-slide-added cycle-slide-removed\", b), f.container.off(\"cycle-destroyed\", e), f.container.off(\"cycle-before\", d), f._sentinel && (f._sentinel.remove(), f._sentinel = null);\n  }\n\n  a.extend(a.fn.cycle.defaults, {\n    autoHeight: 0,\n    autoHeightSpeed: 250,\n    autoHeightEasing: null\n  }), a(document).on(\"cycle-initialized\", function (c, f) {\n    function g() {\n      b(c, f);\n    }\n\n    var h,\n        i = f.autoHeight,\n        j = a.type(i),\n        k = null;\n    (\"string\" === j || \"number\" === j) && (f.container.on(\"cycle-slide-added cycle-slide-removed\", b), f.container.on(\"cycle-destroyed\", e), \"container\" == i ? f.container.on(\"cycle-before\", d) : \"string\" === j && /\\d+\\:\\d+/.test(i) && (h = i.match(/(\\d+)\\:(\\d+)/), h = h[1] / h[2], f._autoHeightRatio = h), \"number\" !== j && (f._autoHeightOnResize = function () {\n      clearTimeout(k), k = setTimeout(g, 50);\n    }, a(window).on(\"resize orientationchange\", f._autoHeightOnResize)), setTimeout(g, 30));\n  });\n}(jQuery),\n/*! caption plugin for Cycle2;  version: 20130306 */\nfunction (a) {\n  \"use strict\";\n\n  a.extend(a.fn.cycle.defaults, {\n    caption: \"> .cycle-caption\",\n    captionTemplate: \"{{slideNum}} / {{slideCount}}\",\n    overlay: \"> .cycle-overlay\",\n    overlayTemplate: \"<div>{{title}}</div><div>{{desc}}</div>\",\n    captionModule: \"caption\"\n  }), a(document).on(\"cycle-update-view\", function (b, c, d, e) {\n    if (\"caption\" === c.captionModule) {\n      a.each([\"caption\", \"overlay\"], function () {\n        var a = this,\n            b = d[a + \"Template\"],\n            f = c.API.getComponent(a);\n        f.length && b ? (f.html(c.API.tmpl(b, d, c, e)), f.show()) : f.hide();\n      });\n    }\n  }), a(document).on(\"cycle-destroyed\", function (b, c) {\n    var d;\n    a.each([\"caption\", \"overlay\"], function () {\n      var a = this,\n          b = c[a + \"Template\"];\n      c[a] && b && (d = c.API.getComponent(\"caption\"), d.empty());\n    });\n  });\n}(jQuery),\n/*! command plugin for Cycle2;  version: 20140415 */\nfunction (a) {\n  \"use strict\";\n\n  var b = a.fn.cycle;\n  a.fn.cycle = function (c) {\n    var d,\n        e,\n        f,\n        g = a.makeArray(arguments);\n    return \"number\" == a.type(c) ? this.cycle(\"goto\", c) : \"string\" == a.type(c) ? this.each(function () {\n      var h;\n      return d = c, f = a(this).data(\"cycle.opts\"), void 0 === f ? void b.log('slideshow must be initialized before sending commands; \"' + d + '\" ignored') : (d = \"goto\" == d ? \"jump\" : d, e = f.API[d], a.isFunction(e) ? (h = a.makeArray(g), h.shift(), e.apply(f.API, h)) : void b.log(\"unknown command: \", d));\n    }) : b.apply(this, arguments);\n  }, a.extend(a.fn.cycle, b), a.extend(b.API, {\n    next: function next() {\n      var a = this.opts();\n\n      if (!a.busy || a.manualTrump) {\n        var b = a.reverse ? -1 : 1;\n        a.allowWrap === !1 && a.currSlide + b >= a.slideCount || (a.API.advanceSlide(b), a.API.trigger(\"cycle-next\", [a]).log(\"cycle-next\"));\n      }\n    },\n    prev: function prev() {\n      var a = this.opts();\n\n      if (!a.busy || a.manualTrump) {\n        var b = a.reverse ? 1 : -1;\n        a.allowWrap === !1 && a.currSlide + b < 0 || (a.API.advanceSlide(b), a.API.trigger(\"cycle-prev\", [a]).log(\"cycle-prev\"));\n      }\n    },\n    destroy: function destroy() {\n      this.stop();\n      var b = this.opts(),\n          c = a.isFunction(a._data) ? a._data : a.noop;\n      clearTimeout(b.timeoutId), b.timeoutId = 0, b.API.stop(), b.API.trigger(\"cycle-destroyed\", [b]).log(\"cycle-destroyed\"), b.container.removeData(), c(b.container[0], \"parsedAttrs\", !1), b.retainStylesOnDestroy || (b.container.removeAttr(\"style\"), b.slides.removeAttr(\"style\"), b.slides.removeClass(b.slideActiveClass)), b.slides.each(function () {\n        var d = a(this);\n        d.removeData(), d.removeClass(b.slideClass), c(this, \"parsedAttrs\", !1);\n      });\n    },\n    jump: function jump(a, b) {\n      var c,\n          d = this.opts();\n\n      if (!d.busy || d.manualTrump) {\n        var e = parseInt(a, 10);\n        if (isNaN(e) || 0 > e || e >= d.slides.length) return void d.API.log(\"goto: invalid slide index: \" + e);\n        if (e == d.currSlide) return void d.API.log(\"goto: skipping, already on slide\", e);\n        d.nextSlide = e, clearTimeout(d.timeoutId), d.timeoutId = 0, d.API.log(\"goto: \", e, \" (zero-index)\"), c = d.currSlide < d.nextSlide, d._tempFx = b, d.API.prepareTx(!0, c);\n      }\n    },\n    stop: function stop() {\n      var b = this.opts(),\n          c = b.container;\n      clearTimeout(b.timeoutId), b.timeoutId = 0, b.API.stopTransition(), b.pauseOnHover && (b.pauseOnHover !== !0 && (c = a(b.pauseOnHover)), c.off(\"mouseenter mouseleave\")), b.API.trigger(\"cycle-stopped\", [b]).log(\"cycle-stopped\");\n    },\n    reinit: function reinit() {\n      var a = this.opts();\n      a.API.destroy(), a.container.cycle();\n    },\n    remove: function remove(b) {\n      for (var c, d, e = this.opts(), f = [], g = 1, h = 0; h < e.slides.length; h++) {\n        c = e.slides[h], h == b ? d = c : (f.push(c), a(c).data(\"cycle.opts\").slideNum = g, g++);\n      }\n\n      d && (e.slides = a(f), e.slideCount--, a(d).remove(), b == e.currSlide ? e.API.advanceSlide(1) : b < e.currSlide ? e.currSlide-- : e.currSlide++, e.API.trigger(\"cycle-slide-removed\", [e, b, d]).log(\"cycle-slide-removed\"), e.API.updateView());\n    }\n  }), a(document).on(\"click.cycle\", \"[data-cycle-cmd]\", function (b) {\n    b.preventDefault();\n    var c = a(this),\n        d = c.data(\"cycle-cmd\"),\n        e = c.data(\"cycle-context\") || \".cycle-slideshow\";\n    a(e).cycle(d, c.data(\"cycle-arg\"));\n  });\n}(jQuery),\n/*! hash plugin for Cycle2;  version: 20130905 */\nfunction (a) {\n  \"use strict\";\n\n  function b(b, c) {\n    var d;\n    return b._hashFence ? void (b._hashFence = !1) : (d = window.location.hash.substring(1), void b.slides.each(function (e) {\n      if (a(this).data(\"cycle-hash\") == d) {\n        if (c === !0) b.startingSlide = e;else {\n          var f = b.currSlide < e;\n          b.nextSlide = e, b.API.prepareTx(!0, f);\n        }\n        return !1;\n      }\n    }));\n  }\n\n  a(document).on(\"cycle-pre-initialize\", function (c, d) {\n    b(d, !0), d._onHashChange = function () {\n      b(d, !1);\n    }, a(window).on(\"hashchange\", d._onHashChange);\n  }), a(document).on(\"cycle-update-view\", function (a, b, c) {\n    c.hash && \"#\" + c.hash != window.location.hash && (b._hashFence = !0, window.location.hash = c.hash);\n  }), a(document).on(\"cycle-destroyed\", function (b, c) {\n    c._onHashChange && a(window).off(\"hashchange\", c._onHashChange);\n  });\n}(jQuery),\n/*! loader plugin for Cycle2;  version: 20131121 */\nfunction (a) {\n  \"use strict\";\n\n  a.extend(a.fn.cycle.defaults, {\n    loader: !1\n  }), a(document).on(\"cycle-bootstrap\", function (b, c) {\n    function d(b, d) {\n      function f(b) {\n        var f;\n        \"wait\" == c.loader ? (h.push(b), 0 === j && (h.sort(g), e.apply(c.API, [h, d]), c.container.removeClass(\"cycle-loading\"))) : (f = a(c.slides[c.currSlide]), e.apply(c.API, [b, d]), f.show(), c.container.removeClass(\"cycle-loading\"));\n      }\n\n      function g(a, b) {\n        return a.data(\"index\") - b.data(\"index\");\n      }\n\n      var h = [];\n      if (\"string\" == a.type(b)) b = a.trim(b);else if (\"array\" === a.type(b)) for (var i = 0; i < b.length; i++) {\n        b[i] = a(b[i])[0];\n      }\n      b = a(b);\n      var j = b.length;\n      j && (b.css(\"visibility\", \"hidden\").appendTo(\"body\").each(function (b) {\n        function g() {\n          0 === --i && (--j, f(k));\n        }\n\n        var i = 0,\n            k = a(this),\n            l = k.is(\"img\") ? k : k.find(\"img\");\n        return k.data(\"index\", b), l = l.filter(\":not(.cycle-loader-ignore)\").filter(':not([src=\"\"])'), l.length ? (i = l.length, void l.each(function () {\n          this.complete ? g() : a(this).load(function () {\n            g();\n          }).on(\"error\", function () {\n            0 === --i && (c.API.log(\"slide skipped; img not loaded:\", this.src), 0 === --j && \"wait\" == c.loader && e.apply(c.API, [h, d]));\n          });\n        })) : (--j, void h.push(k));\n      }), j && c.container.addClass(\"cycle-loading\"));\n    }\n\n    var e;\n    c.loader && (e = c.API.add, c.API.add = d);\n  });\n}(jQuery),\n/*! pager plugin for Cycle2;  version: 20140415 */\nfunction (a) {\n  \"use strict\";\n\n  function b(b, c, d) {\n    var e,\n        f = b.API.getComponent(\"pager\");\n    f.each(function () {\n      var f = a(this);\n\n      if (c.pagerTemplate) {\n        var g = b.API.tmpl(c.pagerTemplate, c, b, d[0]);\n        e = a(g).appendTo(f);\n      } else e = f.children().eq(b.slideCount - 1);\n\n      e.on(b.pagerEvent, function (a) {\n        b.pagerEventBubble || a.preventDefault(), b.API.page(f, a.currentTarget);\n      });\n    });\n  }\n\n  function c(a, b) {\n    var c = this.opts();\n\n    if (!c.busy || c.manualTrump) {\n      var d = a.children().index(b),\n          e = d,\n          f = c.currSlide < e;\n      c.currSlide != e && (c.nextSlide = e, c._tempFx = c.pagerFx, c.API.prepareTx(!0, f), c.API.trigger(\"cycle-pager-activated\", [c, a, b]));\n    }\n  }\n\n  a.extend(a.fn.cycle.defaults, {\n    pager: \"> .cycle-pager\",\n    pagerActiveClass: \"cycle-pager-active\",\n    pagerEvent: \"click.cycle\",\n    pagerEventBubble: void 0,\n    pagerTemplate: \"<span>&bull;</span>\"\n  }), a(document).on(\"cycle-bootstrap\", function (a, c, d) {\n    d.buildPagerLink = b;\n  }), a(document).on(\"cycle-slide-added\", function (a, b, d, e) {\n    b.pager && (b.API.buildPagerLink(b, d, e), b.API.page = c);\n  }), a(document).on(\"cycle-slide-removed\", function (b, c, d) {\n    if (c.pager) {\n      var e = c.API.getComponent(\"pager\");\n      e.each(function () {\n        var b = a(this);\n        a(b.children()[d]).remove();\n      });\n    }\n  }), a(document).on(\"cycle-update-view\", function (b, c) {\n    var d;\n    c.pager && (d = c.API.getComponent(\"pager\"), d.each(function () {\n      a(this).children().removeClass(c.pagerActiveClass).eq(c.currSlide).addClass(c.pagerActiveClass);\n    }));\n  }), a(document).on(\"cycle-destroyed\", function (a, b) {\n    var c = b.API.getComponent(\"pager\");\n    c && (c.children().off(b.pagerEvent), b.pagerTemplate && c.empty());\n  });\n}(jQuery),\n/*! prevnext plugin for Cycle2;  version: 20140408 */\nfunction (a) {\n  \"use strict\";\n\n  a.extend(a.fn.cycle.defaults, {\n    next: \"> .cycle-next\",\n    nextEvent: \"click.cycle\",\n    disabledClass: \"disabled\",\n    prev: \"> .cycle-prev\",\n    prevEvent: \"click.cycle\",\n    swipe: !1\n  }), a(document).on(\"cycle-initialized\", function (a, b) {\n    if (b.API.getComponent(\"next\").on(b.nextEvent, function (a) {\n      a.preventDefault(), b.API.next();\n    }), b.API.getComponent(\"prev\").on(b.prevEvent, function (a) {\n      a.preventDefault(), b.API.prev();\n    }), b.swipe) {\n      var c = b.swipeVert ? \"swipeUp.cycle\" : \"swipeLeft.cycle swipeleft.cycle\",\n          d = b.swipeVert ? \"swipeDown.cycle\" : \"swipeRight.cycle swiperight.cycle\";\n      b.container.on(c, function () {\n        b._tempFx = b.swipeFx, b.API.next();\n      }), b.container.on(d, function () {\n        b._tempFx = b.swipeFx, b.API.prev();\n      });\n    }\n  }), a(document).on(\"cycle-update-view\", function (a, b) {\n    if (!b.allowWrap) {\n      var c = b.disabledClass,\n          d = b.API.getComponent(\"next\"),\n          e = b.API.getComponent(\"prev\"),\n          f = b._prevBoundry || 0,\n          g = void 0 !== b._nextBoundry ? b._nextBoundry : b.slideCount - 1;\n      b.currSlide == g ? d.addClass(c).prop(\"disabled\", !0) : d.removeClass(c).prop(\"disabled\", !1), b.currSlide === f ? e.addClass(c).prop(\"disabled\", !0) : e.removeClass(c).prop(\"disabled\", !1);\n    }\n  }), a(document).on(\"cycle-destroyed\", function (a, b) {\n    b.API.getComponent(\"prev\").off(b.nextEvent), b.API.getComponent(\"next\").off(b.prevEvent), b.container.off(\"swipeleft.cycle swiperight.cycle swipeLeft.cycle swipeRight.cycle swipeUp.cycle swipeDown.cycle\");\n  });\n}(jQuery),\n/*! progressive loader plugin for Cycle2;  version: 20130315 */\nfunction (a) {\n  \"use strict\";\n\n  a.extend(a.fn.cycle.defaults, {\n    progressive: !1\n  }), a(document).on(\"cycle-pre-initialize\", function (b, c) {\n    if (c.progressive) {\n      var d,\n          e,\n          f = c.API,\n          g = f.next,\n          h = f.prev,\n          i = f.prepareTx,\n          j = a.type(c.progressive);\n      if (\"array\" == j) d = c.progressive;else if (a.isFunction(c.progressive)) d = c.progressive(c);else if (\"string\" == j) {\n        if (e = a(c.progressive), d = a.trim(e.html()), !d) return;\n        if (/^(\\[)/.test(d)) try {\n          d = a.parseJSON(d);\n        } catch (k) {\n          return void f.log(\"error parsing progressive slides\", k);\n        } else d = d.split(new RegExp(e.data(\"cycle-split\") || \"\\n\")), d[d.length - 1] || d.pop();\n      }\n      i && (f.prepareTx = function (a, b) {\n        var e, f;\n        return a || 0 === d.length ? void i.apply(c.API, [a, b]) : void (b && c.currSlide == c.slideCount - 1 ? (f = d[0], d = d.slice(1), c.container.one(\"cycle-slide-added\", function (a, b) {\n          setTimeout(function () {\n            b.API.advanceSlide(1);\n          }, 50);\n        }), c.API.add(f)) : b || 0 !== c.currSlide ? i.apply(c.API, [a, b]) : (e = d.length - 1, f = d[e], d = d.slice(0, e), c.container.one(\"cycle-slide-added\", function (a, b) {\n          setTimeout(function () {\n            b.currSlide = 1, b.API.advanceSlide(-1);\n          }, 50);\n        }), c.API.add(f, !0)));\n      }), g && (f.next = function () {\n        var a = this.opts();\n\n        if (d.length && a.currSlide == a.slideCount - 1) {\n          var b = d[0];\n          d = d.slice(1), a.container.one(\"cycle-slide-added\", function (a, b) {\n            g.apply(b.API), b.container.removeClass(\"cycle-loading\");\n          }), a.container.addClass(\"cycle-loading\"), a.API.add(b);\n        } else g.apply(a.API);\n      }), h && (f.prev = function () {\n        var a = this.opts();\n\n        if (d.length && 0 === a.currSlide) {\n          var b = d.length - 1,\n              c = d[b];\n          d = d.slice(0, b), a.container.one(\"cycle-slide-added\", function (a, b) {\n            b.currSlide = 1, b.API.advanceSlide(-1), b.container.removeClass(\"cycle-loading\");\n          }), a.container.addClass(\"cycle-loading\"), a.API.add(c, !0);\n        } else h.apply(a.API);\n      });\n    }\n  });\n}(jQuery),\n/*! tmpl plugin for Cycle2;  version: 20121227 */\nfunction (a) {\n  \"use strict\";\n\n  a.extend(a.fn.cycle.defaults, {\n    tmplRegex: \"{{((.)?.*?)}}\"\n  }), a.extend(a.fn.cycle.API, {\n    tmpl: function tmpl(b, c) {\n      var d = new RegExp(c.tmplRegex || a.fn.cycle.defaults.tmplRegex, \"g\"),\n          e = a.makeArray(arguments);\n      return e.shift(), b.replace(d, function (b, c) {\n        var d,\n            f,\n            g,\n            h,\n            i = c.split(\".\");\n\n        for (d = 0; d < e.length; d++) {\n          if (g = e[d]) {\n            if (i.length > 1) for (h = g, f = 0; f < i.length; f++) {\n              g = h, h = h[i[f]] || c;\n            } else h = g[c];\n            if (a.isFunction(h)) return h.apply(g, e);\n            if (void 0 !== h && null !== h && h != c) return h;\n          }\n        }\n\n        return c;\n      });\n    }\n  });\n}(jQuery);\n/* Plugin for Cycle2; Copyright (c) 2012 M. Alsup; v20141007 */\n\n!function (a) {\n  \"use strict\";\n\n  a.event.special.swipe = a.event.special.swipe || {\n    scrollSupressionThreshold: 10,\n    durationThreshold: 1e3,\n    horizontalDistanceThreshold: 30,\n    verticalDistanceThreshold: 75,\n    setup: function setup() {\n      var b = a(this);\n      b.bind(\"touchstart\", function (c) {\n        function d(b) {\n          if (g) {\n            var c = b.originalEvent.touches ? b.originalEvent.touches[0] : b;\n            e = {\n              time: new Date().getTime(),\n              coords: [c.pageX, c.pageY]\n            }, Math.abs(g.coords[0] - e.coords[0]) > a.event.special.swipe.scrollSupressionThreshold && b.preventDefault();\n          }\n        }\n\n        var e,\n            f = c.originalEvent.touches ? c.originalEvent.touches[0] : c,\n            g = {\n          time: new Date().getTime(),\n          coords: [f.pageX, f.pageY],\n          origin: a(c.target)\n        };\n        b.bind(\"touchmove\", d).one(\"touchend\", function () {\n          b.unbind(\"touchmove\", d), g && e && e.time - g.time < a.event.special.swipe.durationThreshold && Math.abs(g.coords[0] - e.coords[0]) > a.event.special.swipe.horizontalDistanceThreshold && Math.abs(g.coords[1] - e.coords[1]) < a.event.special.swipe.verticalDistanceThreshold && g.origin.trigger(\"swipe\").trigger(g.coords[0] > e.coords[0] ? \"swipeleft\" : \"swiperight\"), g = e = void 0;\n        });\n      });\n    }\n  }, a.event.special.swipeleft = a.event.special.swipeleft || {\n    setup: function setup() {\n      a(this).bind(\"swipe\", a.noop);\n    }\n  }, a.event.special.swiperight = a.event.special.swiperight || a.event.special.swipeleft;\n}(jQuery);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/js/components/cycle2.js\n");

/***/ }),

/***/ "./src/js/components/fontSize.js":
/*!***************************************!*\
  !*** ./src/js/components/fontSize.js ***!
  \***************************************/
/***/ (() => {

eval("(function ($) {\n  if ($('[class^=\"single-fz\"]').length) {\n    var singleFz = parseInt($('p', '.epb-single__content').css('fontSize'));\n    $('.single-fz-plus').on('click', function (e) {\n      e.preventDefault();\n\n      if (singleFz < 32) {\n        $('p', '.epb-single__content').css('fontSize', \"\".concat(singleFz++, \"px\"));\n      }\n    });\n    $('.single-fz-minor').on('click', function (e) {\n      e.preventDefault();\n\n      if (singleFz > 16) {\n        $('p', '.epb-single__content').css('fontSize', \"\".concat(singleFz--, \"px\"));\n      }\n    });\n  }\n})(jQuery);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyIkIiwibGVuZ3RoIiwic2luZ2xlRnoiLCJwYXJzZUludCIsImNzcyIsIm9uIiwiZSIsInByZXZlbnREZWZhdWx0IiwialF1ZXJ5Il0sInNvdXJjZXMiOlsid2VicGFjazovL3BvcnRhbGRvZXNwaWFvLy4vc3JjL2pzL2NvbXBvbmVudHMvZm9udFNpemUuanM/ZTY5OCJdLCJzb3VyY2VzQ29udGVudCI6WyIoZnVuY3Rpb24oJCkge1xuICAgIGlmICgkKCdbY2xhc3NePVwic2luZ2xlLWZ6XCJdJykubGVuZ3RoKSB7XG4gICAgICAgIGxldCBzaW5nbGVGeiA9IHBhcnNlSW50KCQoJ3AnLCAnLmVwYi1zaW5nbGVfX2NvbnRlbnQnKS5jc3MoJ2ZvbnRTaXplJykpO1xuICAgICAgICAkKCcuc2luZ2xlLWZ6LXBsdXMnKS5vbignY2xpY2snLCBmdW5jdGlvbihlKSB7XG4gICAgICAgICAgICBlLnByZXZlbnREZWZhdWx0KCk7XG4gICAgICAgICAgICBpZiAoc2luZ2xlRnogPCAzMikge1xuICAgICAgICAgICAgICAgICQoJ3AnLCAnLmVwYi1zaW5nbGVfX2NvbnRlbnQnKS5jc3MoJ2ZvbnRTaXplJywgYCR7c2luZ2xlRnorK31weGApO1xuICAgICAgICAgICAgfVxuICAgICAgICB9KTtcblxuICAgICAgICAkKCcuc2luZ2xlLWZ6LW1pbm9yJykub24oJ2NsaWNrJywgZnVuY3Rpb24oZSkge1xuICAgICAgICAgICAgZS5wcmV2ZW50RGVmYXVsdCgpO1xuICAgICAgICAgICAgaWYgKHNpbmdsZUZ6ID4gMTYpIHtcbiAgICAgICAgICAgICAgICAkKCdwJywgJy5lcGItc2luZ2xlX19jb250ZW50JykuY3NzKCdmb250U2l6ZScsIGAke3NpbmdsZUZ6LS19cHhgKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfSk7XG4gICAgfVxufSkoalF1ZXJ5KTsiXSwibWFwcGluZ3MiOiJBQUFBLENBQUMsVUFBU0EsQ0FBVCxFQUFZO0VBQ1QsSUFBSUEsQ0FBQyxDQUFDLHNCQUFELENBQUQsQ0FBMEJDLE1BQTlCLEVBQXNDO0lBQ2xDLElBQUlDLFFBQVEsR0FBR0MsUUFBUSxDQUFDSCxDQUFDLENBQUMsR0FBRCxFQUFNLHNCQUFOLENBQUQsQ0FBK0JJLEdBQS9CLENBQW1DLFVBQW5DLENBQUQsQ0FBdkI7SUFDQUosQ0FBQyxDQUFDLGlCQUFELENBQUQsQ0FBcUJLLEVBQXJCLENBQXdCLE9BQXhCLEVBQWlDLFVBQVNDLENBQVQsRUFBWTtNQUN6Q0EsQ0FBQyxDQUFDQyxjQUFGOztNQUNBLElBQUlMLFFBQVEsR0FBRyxFQUFmLEVBQW1CO1FBQ2ZGLENBQUMsQ0FBQyxHQUFELEVBQU0sc0JBQU4sQ0FBRCxDQUErQkksR0FBL0IsQ0FBbUMsVUFBbkMsWUFBa0RGLFFBQVEsRUFBMUQ7TUFDSDtJQUNKLENBTEQ7SUFPQUYsQ0FBQyxDQUFDLGtCQUFELENBQUQsQ0FBc0JLLEVBQXRCLENBQXlCLE9BQXpCLEVBQWtDLFVBQVNDLENBQVQsRUFBWTtNQUMxQ0EsQ0FBQyxDQUFDQyxjQUFGOztNQUNBLElBQUlMLFFBQVEsR0FBRyxFQUFmLEVBQW1CO1FBQ2ZGLENBQUMsQ0FBQyxHQUFELEVBQU0sc0JBQU4sQ0FBRCxDQUErQkksR0FBL0IsQ0FBbUMsVUFBbkMsWUFBa0RGLFFBQVEsRUFBMUQ7TUFDSDtJQUNKLENBTEQ7RUFNSDtBQUNKLENBakJELEVBaUJHTSxNQWpCSCIsImZpbGUiOiIuL3NyYy9qcy9jb21wb25lbnRzL2ZvbnRTaXplLmpzLmpzIiwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./src/js/components/fontSize.js\n");

/***/ }),

/***/ "./src/js/components/getDate.js":
/*!**************************************!*\
  !*** ./src/js/components/getDate.js ***!
  \**************************************/
/***/ (() => {

eval("(function ($) {\n  var monthNames = [\"Janeiro\", \"Fevereiro\", \"Março\", \"Abril\", \"Maio\", \"Junho\", \"Julho\", \"Agosto\", \"Setemrbro\", \"Outubro\", \"Novembro\", \"Dezembro\"];\n  var d = new Date();\n  var dd = String(d.getDate()).padStart(2, '0');\n  var MM = monthNames[d.getMonth()]; // let yyyy = d.getFullYear();\n\n  $('.current-date').html(dd + ' de ' + MM);\n})(jQuery);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyIkIiwibW9udGhOYW1lcyIsImQiLCJEYXRlIiwiZGQiLCJTdHJpbmciLCJnZXREYXRlIiwicGFkU3RhcnQiLCJNTSIsImdldE1vbnRoIiwiaHRtbCIsImpRdWVyeSJdLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9wb3J0YWxkb2VzcGlhby8uL3NyYy9qcy9jb21wb25lbnRzL2dldERhdGUuanM/ZTAyZCJdLCJzb3VyY2VzQ29udGVudCI6WyIoZnVuY3Rpb24gKCQpIHtcbiAgICBjb25zdCBtb250aE5hbWVzID0gW1wiSmFuZWlyb1wiLCBcIkZldmVyZWlyb1wiLCBcIk1hcsOnb1wiLCBcIkFicmlsXCIsIFwiTWFpb1wiLCBcIkp1bmhvXCIsXG4gICAgICAgIFwiSnVsaG9cIiwgXCJBZ29zdG9cIiwgXCJTZXRlbXJicm9cIiwgXCJPdXR1YnJvXCIsIFwiTm92ZW1icm9cIiwgXCJEZXplbWJyb1wiXG4gICAgXTtcbiAgICBsZXQgZCA9IG5ldyBEYXRlKCk7XG4gICAgbGV0IGRkID0gU3RyaW5nKGQuZ2V0RGF0ZSgpKS5wYWRTdGFydCgyLCAnMCcpO1xuICAgIGxldCBNTSA9ICBtb250aE5hbWVzW2QuZ2V0TW9udGgoKV07XG4gICAgLy8gbGV0IHl5eXkgPSBkLmdldEZ1bGxZZWFyKCk7XG4gICAgJCgnLmN1cnJlbnQtZGF0ZScpLmh0bWwoZGQgKyAnIGRlICcgKyBNTSk7XG59KShqUXVlcnkpOyJdLCJtYXBwaW5ncyI6IkFBQUEsQ0FBQyxVQUFVQSxDQUFWLEVBQWE7RUFDVixJQUFNQyxVQUFVLEdBQUcsQ0FBQyxTQUFELEVBQVksV0FBWixFQUF5QixPQUF6QixFQUFrQyxPQUFsQyxFQUEyQyxNQUEzQyxFQUFtRCxPQUFuRCxFQUNmLE9BRGUsRUFDTixRQURNLEVBQ0ksV0FESixFQUNpQixTQURqQixFQUM0QixVQUQ1QixFQUN3QyxVQUR4QyxDQUFuQjtFQUdBLElBQUlDLENBQUMsR0FBRyxJQUFJQyxJQUFKLEVBQVI7RUFDQSxJQUFJQyxFQUFFLEdBQUdDLE1BQU0sQ0FBQ0gsQ0FBQyxDQUFDSSxPQUFGLEVBQUQsQ0FBTixDQUFvQkMsUUFBcEIsQ0FBNkIsQ0FBN0IsRUFBZ0MsR0FBaEMsQ0FBVDtFQUNBLElBQUlDLEVBQUUsR0FBSVAsVUFBVSxDQUFDQyxDQUFDLENBQUNPLFFBQUYsRUFBRCxDQUFwQixDQU5VLENBT1Y7O0VBQ0FULENBQUMsQ0FBQyxlQUFELENBQUQsQ0FBbUJVLElBQW5CLENBQXdCTixFQUFFLEdBQUcsTUFBTCxHQUFjSSxFQUF0QztBQUNILENBVEQsRUFTR0csTUFUSCIsImZpbGUiOiIuL3NyYy9qcy9jb21wb25lbnRzL2dldERhdGUuanMuanMiLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./src/js/components/getDate.js\n");

/***/ }),

/***/ "./src/js/components/indicators.js":
/*!*****************************************!*\
  !*** ./src/js/components/indicators.js ***!
  \*****************************************/
/***/ (() => {

eval("(function ($) {\n  if ($('.economic-indicators').length) {\n    $.ajax({\n      url: 'http://economia.awesomeapi.com.br/json/last/USD-BRL,EUR-BRL,BTC-BRL',\n      success: function success(data) {\n        $('.cur-usd > .cur-min').html('$ ' + parseFloat(data.USDBRL.low).toFixed(2));\n        $('.cur-usd > .cur-max').html('$ ' + parseFloat(data.USDBRL.high).toFixed(2));\n        $('.cur-euro > .cur-min').html('€ ' + parseFloat(data.EURBRL.low).toFixed(2));\n        $('.cur-euro > .cur-max').html('€ ' + parseFloat(data.EURBRL.high).toFixed(2));\n        $('.cur-btc > .cur-min').html('₿ ' + parseFloat(data.BTCBRL.low).toFixed(3));\n        $('.cur-btc > .cur-max').html('₿ ' + parseFloat(data.BTCBRL.high).toFixed(3));\n      },\n      complete: function complete() {\n        $('.economic-indicators').find('.list-group').removeClass('invisible');\n        $('.indicators-loader').addClass('d-none');\n      }\n    });\n  }\n})(jQuery);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyIkIiwibGVuZ3RoIiwiYWpheCIsInVybCIsInN1Y2Nlc3MiLCJkYXRhIiwiaHRtbCIsInBhcnNlRmxvYXQiLCJVU0RCUkwiLCJsb3ciLCJ0b0ZpeGVkIiwiaGlnaCIsIkVVUkJSTCIsIkJUQ0JSTCIsImNvbXBsZXRlIiwiZmluZCIsInJlbW92ZUNsYXNzIiwiYWRkQ2xhc3MiLCJqUXVlcnkiXSwic291cmNlcyI6WyJ3ZWJwYWNrOi8vcG9ydGFsZG9lc3BpYW8vLi9zcmMvanMvY29tcG9uZW50cy9pbmRpY2F0b3JzLmpzPzQ5NDgiXSwic291cmNlc0NvbnRlbnQiOlsiKGZ1bmN0aW9uICgkKSB7XG4gICAgaWYgKCQoJy5lY29ub21pYy1pbmRpY2F0b3JzJykubGVuZ3RoKSB7XG4gICAgICAgICQuYWpheCh7XG4gICAgICAgICAgICB1cmw6ICdodHRwOi8vZWNvbm9taWEuYXdlc29tZWFwaS5jb20uYnIvanNvbi9sYXN0L1VTRC1CUkwsRVVSLUJSTCxCVEMtQlJMJyxcbiAgICAgICAgICAgIHN1Y2Nlc3M6IGZ1bmN0aW9uIChkYXRhKSB7XG4gICAgICAgICAgICAgICAgJCgnLmN1ci11c2QgPiAuY3VyLW1pbicpLmh0bWwoJyQgJyArIHBhcnNlRmxvYXQoZGF0YS5VU0RCUkwubG93KS50b0ZpeGVkKDIpKTtcbiAgICAgICAgICAgICAgICAkKCcuY3VyLXVzZCA+IC5jdXItbWF4JykuaHRtbCgnJCAnICsgcGFyc2VGbG9hdChkYXRhLlVTREJSTC5oaWdoKS50b0ZpeGVkKDIpKTtcblxuICAgICAgICAgICAgICAgICQoJy5jdXItZXVybyA+IC5jdXItbWluJykuaHRtbCgn4oKsICcgKyBwYXJzZUZsb2F0KGRhdGEuRVVSQlJMLmxvdykudG9GaXhlZCgyKSk7XG4gICAgICAgICAgICAgICAgJCgnLmN1ci1ldXJvID4gLmN1ci1tYXgnKS5odG1sKCfigqwgJyArIHBhcnNlRmxvYXQoZGF0YS5FVVJCUkwuaGlnaCkudG9GaXhlZCgyKSk7XG5cbiAgICAgICAgICAgICAgICAkKCcuY3VyLWJ0YyA+IC5jdXItbWluJykuaHRtbCgn4oK/ICcgKyBwYXJzZUZsb2F0KGRhdGEuQlRDQlJMLmxvdykudG9GaXhlZCgzKSk7XG4gICAgICAgICAgICAgICAgJCgnLmN1ci1idGMgPiAuY3VyLW1heCcpLmh0bWwoJ+KCvyAnICsgcGFyc2VGbG9hdChkYXRhLkJUQ0JSTC5oaWdoKS50b0ZpeGVkKDMpKTtcbiAgICAgICAgICAgIH0sXG4gICAgICAgICAgICBjb21wbGV0ZTogZnVuY3Rpb24gKCkge1xuICAgICAgICAgICAgICAgICQoJy5lY29ub21pYy1pbmRpY2F0b3JzJykuZmluZCgnLmxpc3QtZ3JvdXAnKS5yZW1vdmVDbGFzcygnaW52aXNpYmxlJyk7XG4gICAgICAgICAgICAgICAgJCgnLmluZGljYXRvcnMtbG9hZGVyJykuYWRkQ2xhc3MoJ2Qtbm9uZScpO1xuICAgICAgICAgICAgfVxuICAgICAgICB9KTtcbiAgICB9XG59KShqUXVlcnkpOyJdLCJtYXBwaW5ncyI6IkFBQUEsQ0FBQyxVQUFVQSxDQUFWLEVBQWE7RUFDVixJQUFJQSxDQUFDLENBQUMsc0JBQUQsQ0FBRCxDQUEwQkMsTUFBOUIsRUFBc0M7SUFDbENELENBQUMsQ0FBQ0UsSUFBRixDQUFPO01BQ0hDLEdBQUcsRUFBRSxxRUFERjtNQUVIQyxPQUFPLEVBQUUsaUJBQVVDLElBQVYsRUFBZ0I7UUFDckJMLENBQUMsQ0FBQyxxQkFBRCxDQUFELENBQXlCTSxJQUF6QixDQUE4QixPQUFPQyxVQUFVLENBQUNGLElBQUksQ0FBQ0csTUFBTCxDQUFZQyxHQUFiLENBQVYsQ0FBNEJDLE9BQTVCLENBQW9DLENBQXBDLENBQXJDO1FBQ0FWLENBQUMsQ0FBQyxxQkFBRCxDQUFELENBQXlCTSxJQUF6QixDQUE4QixPQUFPQyxVQUFVLENBQUNGLElBQUksQ0FBQ0csTUFBTCxDQUFZRyxJQUFiLENBQVYsQ0FBNkJELE9BQTdCLENBQXFDLENBQXJDLENBQXJDO1FBRUFWLENBQUMsQ0FBQyxzQkFBRCxDQUFELENBQTBCTSxJQUExQixDQUErQixPQUFPQyxVQUFVLENBQUNGLElBQUksQ0FBQ08sTUFBTCxDQUFZSCxHQUFiLENBQVYsQ0FBNEJDLE9BQTVCLENBQW9DLENBQXBDLENBQXRDO1FBQ0FWLENBQUMsQ0FBQyxzQkFBRCxDQUFELENBQTBCTSxJQUExQixDQUErQixPQUFPQyxVQUFVLENBQUNGLElBQUksQ0FBQ08sTUFBTCxDQUFZRCxJQUFiLENBQVYsQ0FBNkJELE9BQTdCLENBQXFDLENBQXJDLENBQXRDO1FBRUFWLENBQUMsQ0FBQyxxQkFBRCxDQUFELENBQXlCTSxJQUF6QixDQUE4QixPQUFPQyxVQUFVLENBQUNGLElBQUksQ0FBQ1EsTUFBTCxDQUFZSixHQUFiLENBQVYsQ0FBNEJDLE9BQTVCLENBQW9DLENBQXBDLENBQXJDO1FBQ0FWLENBQUMsQ0FBQyxxQkFBRCxDQUFELENBQXlCTSxJQUF6QixDQUE4QixPQUFPQyxVQUFVLENBQUNGLElBQUksQ0FBQ1EsTUFBTCxDQUFZRixJQUFiLENBQVYsQ0FBNkJELE9BQTdCLENBQXFDLENBQXJDLENBQXJDO01BQ0gsQ0FYRTtNQVlISSxRQUFRLEVBQUUsb0JBQVk7UUFDbEJkLENBQUMsQ0FBQyxzQkFBRCxDQUFELENBQTBCZSxJQUExQixDQUErQixhQUEvQixFQUE4Q0MsV0FBOUMsQ0FBMEQsV0FBMUQ7UUFDQWhCLENBQUMsQ0FBQyxvQkFBRCxDQUFELENBQXdCaUIsUUFBeEIsQ0FBaUMsUUFBakM7TUFDSDtJQWZFLENBQVA7RUFpQkg7QUFDSixDQXBCRCxFQW9CR0MsTUFwQkgiLCJmaWxlIjoiLi9zcmMvanMvY29tcG9uZW50cy9pbmRpY2F0b3JzLmpzLmpzIiwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./src/js/components/indicators.js\n");

/***/ }),

/***/ "./src/js/components/lastNews.js":
/*!***************************************!*\
  !*** ./src/js/components/lastNews.js ***!
  \***************************************/
/***/ (() => {

eval("(function ($) {\n  $('.epb-main-menu__news--list').cycle();\n})(jQuery);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyIkIiwiY3ljbGUiLCJqUXVlcnkiXSwic291cmNlcyI6WyJ3ZWJwYWNrOi8vcG9ydGFsZG9lc3BpYW8vLi9zcmMvanMvY29tcG9uZW50cy9sYXN0TmV3cy5qcz84YjEzIl0sInNvdXJjZXNDb250ZW50IjpbIihmdW5jdGlvbiAoJCkge1xuICAgICQoJy5lcGItbWFpbi1tZW51X19uZXdzLS1saXN0JykuY3ljbGUoKTtcbn0pKGpRdWVyeSk7Il0sIm1hcHBpbmdzIjoiQUFBQSxDQUFDLFVBQVVBLENBQVYsRUFBYTtFQUNWQSxDQUFDLENBQUMsNEJBQUQsQ0FBRCxDQUFnQ0MsS0FBaEM7QUFDSCxDQUZELEVBRUdDLE1BRkgiLCJmaWxlIjoiLi9zcmMvanMvY29tcG9uZW50cy9sYXN0TmV3cy5qcy5qcyIsInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./src/js/components/lastNews.js\n");

/***/ }),

/***/ "./src/js/components/offcanvas.js":
/*!****************************************!*\
  !*** ./src/js/components/offcanvas.js ***!
  \****************************************/
/***/ (() => {

eval("(function ($) {\n  $('.toggle-offcanvas').on('click', function (e) {\n    e.preventDefault();\n    $('.epb-offcanvas,.epb-offcanvas-overlay').toggleClass('active');\n  });\n})(jQuery);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyIkIiwib24iLCJlIiwicHJldmVudERlZmF1bHQiLCJ0b2dnbGVDbGFzcyIsImpRdWVyeSJdLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9wb3J0YWxkb2VzcGlhby8uL3NyYy9qcy9jb21wb25lbnRzL29mZmNhbnZhcy5qcz85M2Q3Il0sInNvdXJjZXNDb250ZW50IjpbIihmdW5jdGlvbigkKSB7XG4gICAgJCgnLnRvZ2dsZS1vZmZjYW52YXMnKS5vbignY2xpY2snLCBmdW5jdGlvbihlKSB7XG4gICAgICAgIGUucHJldmVudERlZmF1bHQoKTtcbiAgICAgICAgJCgnLmVwYi1vZmZjYW52YXMsLmVwYi1vZmZjYW52YXMtb3ZlcmxheScpLnRvZ2dsZUNsYXNzKCdhY3RpdmUnKTtcbiAgICB9KTtcbn0pKGpRdWVyeSk7Il0sIm1hcHBpbmdzIjoiQUFBQSxDQUFDLFVBQVNBLENBQVQsRUFBWTtFQUNUQSxDQUFDLENBQUMsbUJBQUQsQ0FBRCxDQUF1QkMsRUFBdkIsQ0FBMEIsT0FBMUIsRUFBbUMsVUFBU0MsQ0FBVCxFQUFZO0lBQzNDQSxDQUFDLENBQUNDLGNBQUY7SUFDQUgsQ0FBQyxDQUFDLHVDQUFELENBQUQsQ0FBMkNJLFdBQTNDLENBQXVELFFBQXZEO0VBQ0gsQ0FIRDtBQUlILENBTEQsRUFLR0MsTUFMSCIsImZpbGUiOiIuL3NyYy9qcy9jb21wb25lbnRzL29mZmNhbnZhcy5qcy5qcyIsInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./src/js/components/offcanvas.js\n");

/***/ }),

/***/ "./src/js/components/radioPlayer.js":
/*!******************************************!*\
  !*** ./src/js/components/radioPlayer.js ***!
  \******************************************/
/***/ (() => {

eval("(function ($) {\n  var radioPlayer = $('.epb-radio-player');\n  var RADIO_DELAY = 1200;\n\n  var playRadio = function playRadio(url) {\n    var player = document.getElementById('radio-audio');\n    player.setAttribute('src', url);\n    player.play();\n  };\n\n  var setRadio = function setRadio() {\n    return new Promise(function (resolve) {\n      $('.epb-radio-player__name').text('Aguarde...');\n      var obj = JSON.parse(localStorage.getItem('activeRadio'));\n\n      if (obj) {\n        setTimeout(function () {\n          $('.epb-radio-player__name').text(obj.name);\n          playRadio(obj.url);\n        }, RADIO_DELAY);\n      }\n    });\n  };\n\n  if (radioPlayer.length) {\n    !!localStorage.getItem('activeRadio') && radioPlayer.addClass('active') && setRadio();\n    $('.epb-radios__select').on('change', function () {\n      var obj = {\n        url: $(this).val(),\n        name: $('option:selected', this).text()\n      };\n      localStorage.setItem('activeRadio', JSON.stringify(obj));\n      !radioPlayer.hasClass('active') && radioPlayer.addClass('active');\n      setRadio();\n    });\n    $('.epb-radio-player__close').on('click', function (e) {\n      e.preventDefault();\n      localStorage.removeItem('activeRadio');\n      radioPlayer.removeClass('active');\n      document.getElementById('radio-audio').pause();\n    });\n  }\n})(jQuery);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyIkIiwicmFkaW9QbGF5ZXIiLCJSQURJT19ERUxBWSIsInBsYXlSYWRpbyIsInVybCIsInBsYXllciIsImRvY3VtZW50IiwiZ2V0RWxlbWVudEJ5SWQiLCJzZXRBdHRyaWJ1dGUiLCJwbGF5Iiwic2V0UmFkaW8iLCJQcm9taXNlIiwicmVzb2x2ZSIsInRleHQiLCJvYmoiLCJKU09OIiwicGFyc2UiLCJsb2NhbFN0b3JhZ2UiLCJnZXRJdGVtIiwic2V0VGltZW91dCIsIm5hbWUiLCJsZW5ndGgiLCJhZGRDbGFzcyIsIm9uIiwidmFsIiwic2V0SXRlbSIsInN0cmluZ2lmeSIsImhhc0NsYXNzIiwiZSIsInByZXZlbnREZWZhdWx0IiwicmVtb3ZlSXRlbSIsInJlbW92ZUNsYXNzIiwicGF1c2UiLCJqUXVlcnkiXSwic291cmNlcyI6WyJ3ZWJwYWNrOi8vcG9ydGFsZG9lc3BpYW8vLi9zcmMvanMvY29tcG9uZW50cy9yYWRpb1BsYXllci5qcz8zMzZjIl0sInNvdXJjZXNDb250ZW50IjpbIihmdW5jdGlvbiAoJCkge1xuICAgIGNvbnN0IHJhZGlvUGxheWVyID0gJCgnLmVwYi1yYWRpby1wbGF5ZXInKTtcbiAgICBjb25zdCBSQURJT19ERUxBWSA9IDEyMDA7XG5cbiAgICBjb25zdCBwbGF5UmFkaW8gPSBmdW5jdGlvbiAodXJsKSB7XG4gICAgICAgIGxldCBwbGF5ZXIgPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgncmFkaW8tYXVkaW8nKTtcbiAgICAgICAgcGxheWVyLnNldEF0dHJpYnV0ZSgnc3JjJywgdXJsKTtcbiAgICAgICAgcGxheWVyLnBsYXkoKTtcbiAgICB9O1xuXG4gICAgY29uc3Qgc2V0UmFkaW8gPSBmdW5jdGlvbiAoKSB7XG4gICAgICAgIHJldHVybiBuZXcgUHJvbWlzZShyZXNvbHZlID0+IHtcbiAgICAgICAgICAgICQoJy5lcGItcmFkaW8tcGxheWVyX19uYW1lJykudGV4dCgnQWd1YXJkZS4uLicpO1xuICAgICAgICAgICAgbGV0IG9iaiA9IEpTT04ucGFyc2UobG9jYWxTdG9yYWdlLmdldEl0ZW0oJ2FjdGl2ZVJhZGlvJykpO1xuICAgICAgICAgICAgaWYgKG9iaikge1xuICAgICAgICAgICAgICAgIHNldFRpbWVvdXQoZnVuY3Rpb24gKCkge1xuICAgICAgICAgICAgICAgICAgICAkKCcuZXBiLXJhZGlvLXBsYXllcl9fbmFtZScpLnRleHQob2JqLm5hbWUpO1xuICAgICAgICAgICAgICAgICAgICBwbGF5UmFkaW8ob2JqLnVybCk7XG4gICAgICAgICAgICAgICAgfSwgUkFESU9fREVMQVkpO1xuICAgICAgICAgICAgfVxuICAgICAgICB9KTtcbiAgICB9O1xuXG4gICAgaWYgKHJhZGlvUGxheWVyLmxlbmd0aCkge1xuICAgICAgICAhIWxvY2FsU3RvcmFnZS5nZXRJdGVtKCdhY3RpdmVSYWRpbycpICYmIHJhZGlvUGxheWVyLmFkZENsYXNzKCdhY3RpdmUnKSAmJiBzZXRSYWRpbygpO1xuXG4gICAgICAgICQoJy5lcGItcmFkaW9zX19zZWxlY3QnKS5vbignY2hhbmdlJywgZnVuY3Rpb24gKCkge1xuICAgICAgICAgICAgbGV0IG9iaiA9IHtcbiAgICAgICAgICAgICAgICB1cmw6ICQodGhpcykudmFsKCksXG4gICAgICAgICAgICAgICAgbmFtZTogJCgnb3B0aW9uOnNlbGVjdGVkJywgdGhpcykudGV4dCgpXG4gICAgICAgICAgICB9O1xuICAgICAgICAgICAgbG9jYWxTdG9yYWdlLnNldEl0ZW0oJ2FjdGl2ZVJhZGlvJywgSlNPTi5zdHJpbmdpZnkob2JqKSk7XG4gICAgICAgICAgICAhcmFkaW9QbGF5ZXIuaGFzQ2xhc3MoJ2FjdGl2ZScpICYmIHJhZGlvUGxheWVyLmFkZENsYXNzKCdhY3RpdmUnKTtcbiAgICAgICAgICAgIHNldFJhZGlvKCk7XG4gICAgICAgIH0pO1xuXG4gICAgICAgICQoJy5lcGItcmFkaW8tcGxheWVyX19jbG9zZScpLm9uKCdjbGljaycsIGZ1bmN0aW9uIChlKSB7XG4gICAgICAgICAgICBlLnByZXZlbnREZWZhdWx0KCk7XG4gICAgICAgICAgICBsb2NhbFN0b3JhZ2UucmVtb3ZlSXRlbSgnYWN0aXZlUmFkaW8nKTtcbiAgICAgICAgICAgIHJhZGlvUGxheWVyLnJlbW92ZUNsYXNzKCdhY3RpdmUnKTtcbiAgICAgICAgICAgIGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCdyYWRpby1hdWRpbycpLnBhdXNlKCk7XG4gICAgICAgIH0pO1xuICAgIH1cbn0pKGpRdWVyeSk7Il0sIm1hcHBpbmdzIjoiQUFBQSxDQUFDLFVBQVVBLENBQVYsRUFBYTtFQUNWLElBQU1DLFdBQVcsR0FBR0QsQ0FBQyxDQUFDLG1CQUFELENBQXJCO0VBQ0EsSUFBTUUsV0FBVyxHQUFHLElBQXBCOztFQUVBLElBQU1DLFNBQVMsR0FBRyxTQUFaQSxTQUFZLENBQVVDLEdBQVYsRUFBZTtJQUM3QixJQUFJQyxNQUFNLEdBQUdDLFFBQVEsQ0FBQ0MsY0FBVCxDQUF3QixhQUF4QixDQUFiO0lBQ0FGLE1BQU0sQ0FBQ0csWUFBUCxDQUFvQixLQUFwQixFQUEyQkosR0FBM0I7SUFDQUMsTUFBTSxDQUFDSSxJQUFQO0VBQ0gsQ0FKRDs7RUFNQSxJQUFNQyxRQUFRLEdBQUcsU0FBWEEsUUFBVyxHQUFZO0lBQ3pCLE9BQU8sSUFBSUMsT0FBSixDQUFZLFVBQUFDLE9BQU8sRUFBSTtNQUMxQlosQ0FBQyxDQUFDLHlCQUFELENBQUQsQ0FBNkJhLElBQTdCLENBQWtDLFlBQWxDO01BQ0EsSUFBSUMsR0FBRyxHQUFHQyxJQUFJLENBQUNDLEtBQUwsQ0FBV0MsWUFBWSxDQUFDQyxPQUFiLENBQXFCLGFBQXJCLENBQVgsQ0FBVjs7TUFDQSxJQUFJSixHQUFKLEVBQVM7UUFDTEssVUFBVSxDQUFDLFlBQVk7VUFDbkJuQixDQUFDLENBQUMseUJBQUQsQ0FBRCxDQUE2QmEsSUFBN0IsQ0FBa0NDLEdBQUcsQ0FBQ00sSUFBdEM7VUFDQWpCLFNBQVMsQ0FBQ1csR0FBRyxDQUFDVixHQUFMLENBQVQ7UUFDSCxDQUhTLEVBR1BGLFdBSE8sQ0FBVjtNQUlIO0lBQ0osQ0FUTSxDQUFQO0VBVUgsQ0FYRDs7RUFhQSxJQUFJRCxXQUFXLENBQUNvQixNQUFoQixFQUF3QjtJQUNwQixDQUFDLENBQUNKLFlBQVksQ0FBQ0MsT0FBYixDQUFxQixhQUFyQixDQUFGLElBQXlDakIsV0FBVyxDQUFDcUIsUUFBWixDQUFxQixRQUFyQixDQUF6QyxJQUEyRVosUUFBUSxFQUFuRjtJQUVBVixDQUFDLENBQUMscUJBQUQsQ0FBRCxDQUF5QnVCLEVBQXpCLENBQTRCLFFBQTVCLEVBQXNDLFlBQVk7TUFDOUMsSUFBSVQsR0FBRyxHQUFHO1FBQ05WLEdBQUcsRUFBRUosQ0FBQyxDQUFDLElBQUQsQ0FBRCxDQUFRd0IsR0FBUixFQURDO1FBRU5KLElBQUksRUFBRXBCLENBQUMsQ0FBQyxpQkFBRCxFQUFvQixJQUFwQixDQUFELENBQTJCYSxJQUEzQjtNQUZBLENBQVY7TUFJQUksWUFBWSxDQUFDUSxPQUFiLENBQXFCLGFBQXJCLEVBQW9DVixJQUFJLENBQUNXLFNBQUwsQ0FBZVosR0FBZixDQUFwQztNQUNBLENBQUNiLFdBQVcsQ0FBQzBCLFFBQVosQ0FBcUIsUUFBckIsQ0FBRCxJQUFtQzFCLFdBQVcsQ0FBQ3FCLFFBQVosQ0FBcUIsUUFBckIsQ0FBbkM7TUFDQVosUUFBUTtJQUNYLENBUkQ7SUFVQVYsQ0FBQyxDQUFDLDBCQUFELENBQUQsQ0FBOEJ1QixFQUE5QixDQUFpQyxPQUFqQyxFQUEwQyxVQUFVSyxDQUFWLEVBQWE7TUFDbkRBLENBQUMsQ0FBQ0MsY0FBRjtNQUNBWixZQUFZLENBQUNhLFVBQWIsQ0FBd0IsYUFBeEI7TUFDQTdCLFdBQVcsQ0FBQzhCLFdBQVosQ0FBd0IsUUFBeEI7TUFDQXpCLFFBQVEsQ0FBQ0MsY0FBVCxDQUF3QixhQUF4QixFQUF1Q3lCLEtBQXZDO0lBQ0gsQ0FMRDtFQU1IO0FBQ0osQ0EzQ0QsRUEyQ0dDLE1BM0NIIiwiZmlsZSI6Ii4vc3JjL2pzL2NvbXBvbmVudHMvcmFkaW9QbGF5ZXIuanMuanMiLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./src/js/components/radioPlayer.js\n");

/***/ }),

/***/ "./src/js/components/scrollMenu.js":
/*!*****************************************!*\
  !*** ./src/js/components/scrollMenu.js ***!
  \*****************************************/
/***/ (() => {

eval("(function ($) {\n  var lastScrollTop = 0;\n  $(window).on('scroll', function () {\n    var st = $(this).scrollTop();\n\n    if (st > lastScrollTop) {\n      $('.epb-scroll-menu').removeClass('active');\n    } else if (st <= 200) {\n      $('.epb-scroll-menu').removeClass('active');\n    } else {\n      $('.epb-scroll-menu').addClass('active');\n    }\n\n    lastScrollTop = st;\n  });\n})(jQuery);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyIkIiwibGFzdFNjcm9sbFRvcCIsIndpbmRvdyIsIm9uIiwic3QiLCJzY3JvbGxUb3AiLCJyZW1vdmVDbGFzcyIsImFkZENsYXNzIiwialF1ZXJ5Il0sInNvdXJjZXMiOlsid2VicGFjazovL3BvcnRhbGRvZXNwaWFvLy4vc3JjL2pzL2NvbXBvbmVudHMvc2Nyb2xsTWVudS5qcz82MzZmIl0sInNvdXJjZXNDb250ZW50IjpbIihmdW5jdGlvbiAoJCkge1xuICAgIGxldCBsYXN0U2Nyb2xsVG9wID0gMDtcbiAgICAkKHdpbmRvdykub24oJ3Njcm9sbCcsIGZ1bmN0aW9uICgpIHtcbiAgICAgICAgbGV0IHN0ID0gJCh0aGlzKS5zY3JvbGxUb3AoKTtcbiAgICAgICAgaWYgKHN0ID4gbGFzdFNjcm9sbFRvcCkge1xuICAgICAgICAgICAgJCgnLmVwYi1zY3JvbGwtbWVudScpLnJlbW92ZUNsYXNzKCdhY3RpdmUnKTtcbiAgICAgICAgfSBlbHNlIGlmIChzdCA8PSAyMDApIHtcbiAgICAgICAgICAgICQoJy5lcGItc2Nyb2xsLW1lbnUnKS5yZW1vdmVDbGFzcygnYWN0aXZlJyk7XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICAkKCcuZXBiLXNjcm9sbC1tZW51JykuYWRkQ2xhc3MoJ2FjdGl2ZScpO1xuICAgICAgICB9XG4gICAgICAgIGxhc3RTY3JvbGxUb3AgPSBzdDtcbiAgICB9KTtcbn0pKGpRdWVyeSk7Il0sIm1hcHBpbmdzIjoiQUFBQSxDQUFDLFVBQVVBLENBQVYsRUFBYTtFQUNWLElBQUlDLGFBQWEsR0FBRyxDQUFwQjtFQUNBRCxDQUFDLENBQUNFLE1BQUQsQ0FBRCxDQUFVQyxFQUFWLENBQWEsUUFBYixFQUF1QixZQUFZO0lBQy9CLElBQUlDLEVBQUUsR0FBR0osQ0FBQyxDQUFDLElBQUQsQ0FBRCxDQUFRSyxTQUFSLEVBQVQ7O0lBQ0EsSUFBSUQsRUFBRSxHQUFHSCxhQUFULEVBQXdCO01BQ3BCRCxDQUFDLENBQUMsa0JBQUQsQ0FBRCxDQUFzQk0sV0FBdEIsQ0FBa0MsUUFBbEM7SUFDSCxDQUZELE1BRU8sSUFBSUYsRUFBRSxJQUFJLEdBQVYsRUFBZTtNQUNsQkosQ0FBQyxDQUFDLGtCQUFELENBQUQsQ0FBc0JNLFdBQXRCLENBQWtDLFFBQWxDO0lBQ0gsQ0FGTSxNQUVBO01BQ0hOLENBQUMsQ0FBQyxrQkFBRCxDQUFELENBQXNCTyxRQUF0QixDQUErQixRQUEvQjtJQUNIOztJQUNETixhQUFhLEdBQUdHLEVBQWhCO0VBQ0gsQ0FWRDtBQVdILENBYkQsRUFhR0ksTUFiSCIsImZpbGUiOiIuL3NyYy9qcy9jb21wb25lbnRzL3Njcm9sbE1lbnUuanMuanMiLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./src/js/components/scrollMenu.js\n");

/***/ }),

/***/ "./src/js/components/slideFeatures.js":
/*!********************************************!*\
  !*** ./src/js/components/slideFeatures.js ***!
  \********************************************/
/***/ (() => {

eval("(function ($) {\n  $('.slide-features').cycle();\n})(jQuery);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyIkIiwiY3ljbGUiLCJqUXVlcnkiXSwic291cmNlcyI6WyJ3ZWJwYWNrOi8vcG9ydGFsZG9lc3BpYW8vLi9zcmMvanMvY29tcG9uZW50cy9zbGlkZUZlYXR1cmVzLmpzP2VjZjciXSwic291cmNlc0NvbnRlbnQiOlsiKGZ1bmN0aW9uICgkKSB7XG4gICAgJCgnLnNsaWRlLWZlYXR1cmVzJykuY3ljbGUoKTtcbn0pKGpRdWVyeSk7Il0sIm1hcHBpbmdzIjoiQUFBQSxDQUFDLFVBQVVBLENBQVYsRUFBYTtFQUNWQSxDQUFDLENBQUMsaUJBQUQsQ0FBRCxDQUFxQkMsS0FBckI7QUFDSCxDQUZELEVBRUdDLE1BRkgiLCJmaWxlIjoiLi9zcmMvanMvY29tcG9uZW50cy9zbGlkZUZlYXR1cmVzLmpzLmpzIiwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./src/js/components/slideFeatures.js\n");

/***/ }),

/***/ "./src/js/components/userLocation.js":
/*!*******************************************!*\
  !*** ./src/js/components/userLocation.js ***!
  \*******************************************/
/***/ (() => {

eval("(function ($) {\n  // TODO check city\n  if (!localStorage.getItem('epb_location_city')) {\n    var reverseGeocoder = new BDCReverseGeocode();\n    reverseGeocoder.getClientLocation(function (result) {\n      localStorage.setItem('epb_location_city', result.city);\n      $('.current-city').html(localStorage.getItem('epb_location_city') + ', ');\n    });\n  } else {\n    $('.current-city').html(localStorage.getItem('epb_location_city') + ', ');\n  }\n})(jQuery);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyIkIiwibG9jYWxTdG9yYWdlIiwiZ2V0SXRlbSIsInJldmVyc2VHZW9jb2RlciIsIkJEQ1JldmVyc2VHZW9jb2RlIiwiZ2V0Q2xpZW50TG9jYXRpb24iLCJyZXN1bHQiLCJzZXRJdGVtIiwiY2l0eSIsImh0bWwiLCJqUXVlcnkiXSwic291cmNlcyI6WyJ3ZWJwYWNrOi8vcG9ydGFsZG9lc3BpYW8vLi9zcmMvanMvY29tcG9uZW50cy91c2VyTG9jYXRpb24uanM/ODFkYyJdLCJzb3VyY2VzQ29udGVudCI6WyJcbihmdW5jdGlvbiAoJCkge1xuICAgIC8vIFRPRE8gY2hlY2sgY2l0eVxuICAgIGlmICghbG9jYWxTdG9yYWdlLmdldEl0ZW0oJ2VwYl9sb2NhdGlvbl9jaXR5JykpIHtcbiAgICAgICAgbGV0IHJldmVyc2VHZW9jb2RlciA9IG5ldyBCRENSZXZlcnNlR2VvY29kZSgpO1xuICAgICAgICByZXZlcnNlR2VvY29kZXIuZ2V0Q2xpZW50TG9jYXRpb24oZnVuY3Rpb24gKHJlc3VsdCkge1xuICAgICAgICAgICAgbG9jYWxTdG9yYWdlLnNldEl0ZW0oJ2VwYl9sb2NhdGlvbl9jaXR5JywgcmVzdWx0LmNpdHkpO1xuICAgICAgICAgICAgJCgnLmN1cnJlbnQtY2l0eScpLmh0bWwobG9jYWxTdG9yYWdlLmdldEl0ZW0oJ2VwYl9sb2NhdGlvbl9jaXR5JykgKyAnLCAnKTtcbiAgICAgICAgfSk7XG4gICAgfSBlbHNlIHtcbiAgICAgICAgJCgnLmN1cnJlbnQtY2l0eScpLmh0bWwobG9jYWxTdG9yYWdlLmdldEl0ZW0oJ2VwYl9sb2NhdGlvbl9jaXR5JykgKyAnLCAnKTtcbiAgICB9XG59KShqUXVlcnkpOyJdLCJtYXBwaW5ncyI6IkFBQ0EsQ0FBQyxVQUFVQSxDQUFWLEVBQWE7RUFDVjtFQUNBLElBQUksQ0FBQ0MsWUFBWSxDQUFDQyxPQUFiLENBQXFCLG1CQUFyQixDQUFMLEVBQWdEO0lBQzVDLElBQUlDLGVBQWUsR0FBRyxJQUFJQyxpQkFBSixFQUF0QjtJQUNBRCxlQUFlLENBQUNFLGlCQUFoQixDQUFrQyxVQUFVQyxNQUFWLEVBQWtCO01BQ2hETCxZQUFZLENBQUNNLE9BQWIsQ0FBcUIsbUJBQXJCLEVBQTBDRCxNQUFNLENBQUNFLElBQWpEO01BQ0FSLENBQUMsQ0FBQyxlQUFELENBQUQsQ0FBbUJTLElBQW5CLENBQXdCUixZQUFZLENBQUNDLE9BQWIsQ0FBcUIsbUJBQXJCLElBQTRDLElBQXBFO0lBQ0gsQ0FIRDtFQUlILENBTkQsTUFNTztJQUNIRixDQUFDLENBQUMsZUFBRCxDQUFELENBQW1CUyxJQUFuQixDQUF3QlIsWUFBWSxDQUFDQyxPQUFiLENBQXFCLG1CQUFyQixJQUE0QyxJQUFwRTtFQUNIO0FBQ0osQ0FYRCxFQVdHUSxNQVhIIiwiZmlsZSI6Ii4vc3JjL2pzL2NvbXBvbmVudHMvdXNlckxvY2F0aW9uLmpzLmpzIiwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./src/js/components/userLocation.js\n");

/***/ }),

/***/ "./src/js/components/videosGalery.js":
/*!*******************************************!*\
  !*** ./src/js/components/videosGalery.js ***!
  \*******************************************/
/***/ (() => {

eval("(function ($) {\n  $('a', '.epb-videos__galery--list').on('click', function (e) {\n    e.preventDefault();\n    var media = $(this).data('youtubeid');\n    var link = $(this).data('video-link');\n    var txt = $(this).attr('title');\n    $('iframe', '.epb-videos__galery--media').attr('src', 'https://www.youtube.com/embed/' + media);\n    $('.video-title-player').attr('src', link).html(txt);\n  });\n  $('.video-th', '.epb-videos__galery--list').on('click', function () {\n    $(this).addClass('active').siblings('div').removeClass('active');\n  }); // $('> div > a', '.epb-videos__galery--pager').on('click', function(e) {\n  //     e.preventDefault();\n  //     $(this)\n  //         .addClass('active')\n  //         .parent()\n  //         .siblings()\n  //         .removeClass('active');\n  // });\n})(jQuery);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyIkIiwib24iLCJlIiwicHJldmVudERlZmF1bHQiLCJtZWRpYSIsImRhdGEiLCJsaW5rIiwidHh0IiwiYXR0ciIsImh0bWwiLCJhZGRDbGFzcyIsInNpYmxpbmdzIiwicmVtb3ZlQ2xhc3MiLCJqUXVlcnkiXSwic291cmNlcyI6WyJ3ZWJwYWNrOi8vcG9ydGFsZG9lc3BpYW8vLi9zcmMvanMvY29tcG9uZW50cy92aWRlb3NHYWxlcnkuanM/MzZhYSJdLCJzb3VyY2VzQ29udGVudCI6WyIoZnVuY3Rpb24oJCkge1xuICAgICQoJ2EnICwnLmVwYi12aWRlb3NfX2dhbGVyeS0tbGlzdCcpLm9uKCdjbGljaycsIGZ1bmN0aW9uKGUpIHtcbiAgICAgICAgZS5wcmV2ZW50RGVmYXVsdCgpO1xuICAgICAgICBsZXQgbWVkaWEgPSAkKHRoaXMpLmRhdGEoJ3lvdXR1YmVpZCcpO1xuICAgICAgICBsZXQgbGluayAgPSAkKHRoaXMpLmRhdGEoJ3ZpZGVvLWxpbmsnKTtcbiAgICAgICAgbGV0IHR4dCAgID0gJCh0aGlzKS5hdHRyKCd0aXRsZScpO1xuICAgICAgICAkKCdpZnJhbWUnLCAnLmVwYi12aWRlb3NfX2dhbGVyeS0tbWVkaWEnKVxuICAgICAgICAgICAgLmF0dHIoJ3NyYycsICdodHRwczovL3d3dy55b3V0dWJlLmNvbS9lbWJlZC8nICsgbWVkaWEpO1xuICAgICAgICAkKCcudmlkZW8tdGl0bGUtcGxheWVyJylcbiAgICAgICAgICAgIC5hdHRyKCdzcmMnLCBsaW5rKVxuICAgICAgICAgICAgLmh0bWwodHh0KTtcbiAgICB9KTtcblxuICAgICQoJy52aWRlby10aCcsICcuZXBiLXZpZGVvc19fZ2FsZXJ5LS1saXN0Jykub24oJ2NsaWNrJyxmdW5jdGlvbigpIHtcbiAgICAgICAgJCh0aGlzKS5hZGRDbGFzcygnYWN0aXZlJylcbiAgICAgICAgICAgIC5zaWJsaW5ncygnZGl2JylcbiAgICAgICAgICAgIC5yZW1vdmVDbGFzcygnYWN0aXZlJyk7XG4gICAgfSk7XG5cbiAgICAvLyAkKCc+IGRpdiA+IGEnLCAnLmVwYi12aWRlb3NfX2dhbGVyeS0tcGFnZXInKS5vbignY2xpY2snLCBmdW5jdGlvbihlKSB7XG4gICAgLy8gICAgIGUucHJldmVudERlZmF1bHQoKTtcbiAgICAvLyAgICAgJCh0aGlzKVxuICAgIC8vICAgICAgICAgLmFkZENsYXNzKCdhY3RpdmUnKVxuICAgIC8vICAgICAgICAgLnBhcmVudCgpXG4gICAgLy8gICAgICAgICAuc2libGluZ3MoKVxuICAgIC8vICAgICAgICAgLnJlbW92ZUNsYXNzKCdhY3RpdmUnKTtcbiAgICAvLyB9KTtcbn0pKGpRdWVyeSk7Il0sIm1hcHBpbmdzIjoiQUFBQSxDQUFDLFVBQVNBLENBQVQsRUFBWTtFQUNUQSxDQUFDLENBQUMsR0FBRCxFQUFNLDJCQUFOLENBQUQsQ0FBb0NDLEVBQXBDLENBQXVDLE9BQXZDLEVBQWdELFVBQVNDLENBQVQsRUFBWTtJQUN4REEsQ0FBQyxDQUFDQyxjQUFGO0lBQ0EsSUFBSUMsS0FBSyxHQUFHSixDQUFDLENBQUMsSUFBRCxDQUFELENBQVFLLElBQVIsQ0FBYSxXQUFiLENBQVo7SUFDQSxJQUFJQyxJQUFJLEdBQUlOLENBQUMsQ0FBQyxJQUFELENBQUQsQ0FBUUssSUFBUixDQUFhLFlBQWIsQ0FBWjtJQUNBLElBQUlFLEdBQUcsR0FBS1AsQ0FBQyxDQUFDLElBQUQsQ0FBRCxDQUFRUSxJQUFSLENBQWEsT0FBYixDQUFaO0lBQ0FSLENBQUMsQ0FBQyxRQUFELEVBQVcsNEJBQVgsQ0FBRCxDQUNLUSxJQURMLENBQ1UsS0FEVixFQUNpQixtQ0FBbUNKLEtBRHBEO0lBRUFKLENBQUMsQ0FBQyxxQkFBRCxDQUFELENBQ0tRLElBREwsQ0FDVSxLQURWLEVBQ2lCRixJQURqQixFQUVLRyxJQUZMLENBRVVGLEdBRlY7RUFHSCxDQVZEO0VBWUFQLENBQUMsQ0FBQyxXQUFELEVBQWMsMkJBQWQsQ0FBRCxDQUE0Q0MsRUFBNUMsQ0FBK0MsT0FBL0MsRUFBdUQsWUFBVztJQUM5REQsQ0FBQyxDQUFDLElBQUQsQ0FBRCxDQUFRVSxRQUFSLENBQWlCLFFBQWpCLEVBQ0tDLFFBREwsQ0FDYyxLQURkLEVBRUtDLFdBRkwsQ0FFaUIsUUFGakI7RUFHSCxDQUpELEVBYlMsQ0FtQlQ7RUFDQTtFQUNBO0VBQ0E7RUFDQTtFQUNBO0VBQ0E7RUFDQTtBQUNILENBM0JELEVBMkJHQyxNQTNCSCIsImZpbGUiOiIuL3NyYy9qcy9jb21wb25lbnRzL3ZpZGVvc0dhbGVyeS5qcy5qcyIsInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./src/js/components/videosGalery.js\n");

/***/ }),

/***/ "./src/js/components/weather.js":
/*!**************************************!*\
  !*** ./src/js/components/weather.js ***!
  \**************************************/
/***/ (() => {

eval("(function ($) {\n  // TODO check city and evite repeat\n  var API_WEATHER_KEY = '97e4a06894a76c6c2eaa91f28272752d';\n  var reverseGeocoder = new BDCReverseGeocode();\n  var lat, lon;\n  reverseGeocoder.getClientCoordinates(function (result) {\n    localStorage.setItem('epb_location_lat', result.coords.latitude);\n    localStorage.setItem('epb_location_lon', result.coords.longitude);\n    lat = localStorage.getItem('epb_location_lat');\n    lon = localStorage.getItem('epb_location_lon');\n    $.ajax({\n      url: \"https://api.openweathermap.org/data/2.5/weather?lat=\".concat(lat, \"&lon=\").concat(lon, \"&units=metric&appid=\").concat(API_WEATHER_KEY)\n    }).done(function (html) {\n      $('.temp-max').html(\"<i class=\\\"fa-solid fa-temperature-arrow-up\\\"></i> \".concat(parseInt(html.main.temp_max), \"\\xB0\"));\n      $('.temp-min').html(\"<i class=\\\"fa-solid fa-temperature-arrow-down\\\"></i> \".concat(parseInt(html.main.temp_min), \"\\xB0\"));\n    });\n  });\n})(jQuery);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyIkIiwiQVBJX1dFQVRIRVJfS0VZIiwicmV2ZXJzZUdlb2NvZGVyIiwiQkRDUmV2ZXJzZUdlb2NvZGUiLCJsYXQiLCJsb24iLCJnZXRDbGllbnRDb29yZGluYXRlcyIsInJlc3VsdCIsImxvY2FsU3RvcmFnZSIsInNldEl0ZW0iLCJjb29yZHMiLCJsYXRpdHVkZSIsImxvbmdpdHVkZSIsImdldEl0ZW0iLCJhamF4IiwidXJsIiwiZG9uZSIsImh0bWwiLCJwYXJzZUludCIsIm1haW4iLCJ0ZW1wX21heCIsInRlbXBfbWluIiwialF1ZXJ5Il0sInNvdXJjZXMiOlsid2VicGFjazovL3BvcnRhbGRvZXNwaWFvLy4vc3JjL2pzL2NvbXBvbmVudHMvd2VhdGhlci5qcz8yNTcwIl0sInNvdXJjZXNDb250ZW50IjpbIihmdW5jdGlvbiAoJCkge1xuICAgIC8vIFRPRE8gY2hlY2sgY2l0eSBhbmQgZXZpdGUgcmVwZWF0XG4gICAgY29uc3QgQVBJX1dFQVRIRVJfS0VZID0gJzk3ZTRhMDY4OTRhNzZjNmMyZWFhOTFmMjgyNzI3NTJkJztcbiAgICBjb25zdCByZXZlcnNlR2VvY29kZXIgPSBuZXcgQkRDUmV2ZXJzZUdlb2NvZGUoKTtcbiAgICBsZXQgbGF0LCBsb247XG5cbiAgICByZXZlcnNlR2VvY29kZXIuZ2V0Q2xpZW50Q29vcmRpbmF0ZXMoZnVuY3Rpb24ocmVzdWx0KSB7XG4gICAgICAgIGxvY2FsU3RvcmFnZS5zZXRJdGVtKCdlcGJfbG9jYXRpb25fbGF0JywgcmVzdWx0LmNvb3Jkcy5sYXRpdHVkZSk7XG4gICAgICAgIGxvY2FsU3RvcmFnZS5zZXRJdGVtKCdlcGJfbG9jYXRpb25fbG9uJywgcmVzdWx0LmNvb3Jkcy5sb25naXR1ZGUpO1xuXG4gICAgICAgIGxhdCA9IGxvY2FsU3RvcmFnZS5nZXRJdGVtKCdlcGJfbG9jYXRpb25fbGF0Jyk7XG4gICAgICAgIGxvbiA9IGxvY2FsU3RvcmFnZS5nZXRJdGVtKCdlcGJfbG9jYXRpb25fbG9uJyk7XG5cbiAgICAgICAgJC5hamF4KHtcbiAgICAgICAgICAgIHVybDogYGh0dHBzOi8vYXBpLm9wZW53ZWF0aGVybWFwLm9yZy9kYXRhLzIuNS93ZWF0aGVyP2xhdD0ke2xhdH0mbG9uPSR7bG9ufSZ1bml0cz1tZXRyaWMmYXBwaWQ9JHtBUElfV0VBVEhFUl9LRVl9YFxuICAgICAgICB9KVxuICAgICAgICAgICAgLmRvbmUoZnVuY3Rpb24gKGh0bWwpIHtcbiAgICAgICAgICAgICAgICAkKCcudGVtcC1tYXgnKS5odG1sKGA8aSBjbGFzcz1cImZhLXNvbGlkIGZhLXRlbXBlcmF0dXJlLWFycm93LXVwXCI+PC9pPiAke3BhcnNlSW50KGh0bWwubWFpbi50ZW1wX21heCl9wrBgKTtcbiAgICAgICAgICAgICAgICAkKCcudGVtcC1taW4nKS5odG1sKGA8aSBjbGFzcz1cImZhLXNvbGlkIGZhLXRlbXBlcmF0dXJlLWFycm93LWRvd25cIj48L2k+ICR7cGFyc2VJbnQoaHRtbC5tYWluLnRlbXBfbWluKX3CsGApO1xuICAgICAgICAgICAgfSk7XG4gICAgfSk7XG59KShqUXVlcnkpO1xuXG4iXSwibWFwcGluZ3MiOiJBQUFBLENBQUMsVUFBVUEsQ0FBVixFQUFhO0VBQ1Y7RUFDQSxJQUFNQyxlQUFlLEdBQUcsa0NBQXhCO0VBQ0EsSUFBTUMsZUFBZSxHQUFHLElBQUlDLGlCQUFKLEVBQXhCO0VBQ0EsSUFBSUMsR0FBSixFQUFTQyxHQUFUO0VBRUFILGVBQWUsQ0FBQ0ksb0JBQWhCLENBQXFDLFVBQVNDLE1BQVQsRUFBaUI7SUFDbERDLFlBQVksQ0FBQ0MsT0FBYixDQUFxQixrQkFBckIsRUFBeUNGLE1BQU0sQ0FBQ0csTUFBUCxDQUFjQyxRQUF2RDtJQUNBSCxZQUFZLENBQUNDLE9BQWIsQ0FBcUIsa0JBQXJCLEVBQXlDRixNQUFNLENBQUNHLE1BQVAsQ0FBY0UsU0FBdkQ7SUFFQVIsR0FBRyxHQUFHSSxZQUFZLENBQUNLLE9BQWIsQ0FBcUIsa0JBQXJCLENBQU47SUFDQVIsR0FBRyxHQUFHRyxZQUFZLENBQUNLLE9BQWIsQ0FBcUIsa0JBQXJCLENBQU47SUFFQWIsQ0FBQyxDQUFDYyxJQUFGLENBQU87TUFDSEMsR0FBRyxnRUFBeURYLEdBQXpELGtCQUFvRUMsR0FBcEUsaUNBQThGSixlQUE5RjtJQURBLENBQVAsRUFHS2UsSUFITCxDQUdVLFVBQVVDLElBQVYsRUFBZ0I7TUFDbEJqQixDQUFDLENBQUMsV0FBRCxDQUFELENBQWVpQixJQUFmLDhEQUF3RUMsUUFBUSxDQUFDRCxJQUFJLENBQUNFLElBQUwsQ0FBVUMsUUFBWCxDQUFoRjtNQUNBcEIsQ0FBQyxDQUFDLFdBQUQsQ0FBRCxDQUFlaUIsSUFBZixnRUFBMEVDLFFBQVEsQ0FBQ0QsSUFBSSxDQUFDRSxJQUFMLENBQVVFLFFBQVgsQ0FBbEY7SUFDSCxDQU5MO0VBT0gsQ0FkRDtBQWVILENBckJELEVBcUJHQyxNQXJCSCIsImZpbGUiOiIuL3NyYy9qcy9jb21wb25lbnRzL3dlYXRoZXIuanMuanMiLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./src/js/components/weather.js\n");

/***/ }),

/***/ "./src/scss/app.scss":
/*!***************************!*\
  !*** ./src/scss/app.scss ***!
  \***************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n// extracted by mini-css-extract-plugin\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvc2Nzcy9hcHAuc2Nzcy5qcyIsIm1hcHBpbmdzIjoiO0FBQUEiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9wb3J0YWxkb2VzcGlhby8uL3NyYy9zY3NzL2FwcC5zY3NzPzllZjUiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gZXh0cmFjdGVkIGJ5IG1pbmktY3NzLWV4dHJhY3QtcGx1Z2luXG5leHBvcnQge307Il0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./src/scss/app.scss\n");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	// The module cache
/******/ 	var __webpack_module_cache__ = {};
/******/ 	
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/ 		// Check if module is in cache
/******/ 		var cachedModule = __webpack_module_cache__[moduleId];
/******/ 		if (cachedModule !== undefined) {
/******/ 			return cachedModule.exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = __webpack_module_cache__[moduleId] = {
/******/ 			// no module.id needed
/******/ 			// no module.loaded needed
/******/ 			exports: {}
/******/ 		};
/******/ 	
/******/ 		// Execute the module function
/******/ 		__webpack_modules__[moduleId](module, module.exports, __webpack_require__);
/******/ 	
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/ 	
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = __webpack_modules__;
/******/ 	
/************************************************************************/
/******/ 	/* webpack/runtime/chunk loaded */
/******/ 	(() => {
/******/ 		var deferred = [];
/******/ 		__webpack_require__.O = (result, chunkIds, fn, priority) => {
/******/ 			if(chunkIds) {
/******/ 				priority = priority || 0;
/******/ 				for(var i = deferred.length; i > 0 && deferred[i - 1][2] > priority; i--) deferred[i] = deferred[i - 1];
/******/ 				deferred[i] = [chunkIds, fn, priority];
/******/ 				return;
/******/ 			}
/******/ 			var notFulfilled = Infinity;
/******/ 			for (var i = 0; i < deferred.length; i++) {
/******/ 				var [chunkIds, fn, priority] = deferred[i];
/******/ 				var fulfilled = true;
/******/ 				for (var j = 0; j < chunkIds.length; j++) {
/******/ 					if ((priority & 1 === 0 || notFulfilled >= priority) && Object.keys(__webpack_require__.O).every((key) => (__webpack_require__.O[key](chunkIds[j])))) {
/******/ 						chunkIds.splice(j--, 1);
/******/ 					} else {
/******/ 						fulfilled = false;
/******/ 						if(priority < notFulfilled) notFulfilled = priority;
/******/ 					}
/******/ 				}
/******/ 				if(fulfilled) {
/******/ 					deferred.splice(i--, 1)
/******/ 					var r = fn();
/******/ 					if (r !== undefined) result = r;
/******/ 				}
/******/ 			}
/******/ 			return result;
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/compat get default export */
/******/ 	(() => {
/******/ 		// getDefaultExport function for compatibility with non-harmony modules
/******/ 		__webpack_require__.n = (module) => {
/******/ 			var getter = module && module.__esModule ?
/******/ 				() => (module['default']) :
/******/ 				() => (module);
/******/ 			__webpack_require__.d(getter, { a: getter });
/******/ 			return getter;
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/define property getters */
/******/ 	(() => {
/******/ 		// define getter functions for harmony exports
/******/ 		__webpack_require__.d = (exports, definition) => {
/******/ 			for(var key in definition) {
/******/ 				if(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {
/******/ 					Object.defineProperty(exports, key, { enumerable: true, get: definition[key] });
/******/ 				}
/******/ 			}
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/hasOwnProperty shorthand */
/******/ 	(() => {
/******/ 		__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/make namespace object */
/******/ 	(() => {
/******/ 		// define __esModule on exports
/******/ 		__webpack_require__.r = (exports) => {
/******/ 			if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 				Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 			}
/******/ 			Object.defineProperty(exports, '__esModule', { value: true });
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/jsonp chunk loading */
/******/ 	(() => {
/******/ 		// no baseURI
/******/ 		
/******/ 		// object to store loaded and loading chunks
/******/ 		// undefined = chunk not loaded, null = chunk preloaded/prefetched
/******/ 		// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded
/******/ 		var installedChunks = {
/******/ 			"/js/app": 0,
/******/ 			"css/app": 0
/******/ 		};
/******/ 		
/******/ 		// no chunk on demand loading
/******/ 		
/******/ 		// no prefetching
/******/ 		
/******/ 		// no preloaded
/******/ 		
/******/ 		// no HMR
/******/ 		
/******/ 		// no HMR manifest
/******/ 		
/******/ 		__webpack_require__.O.j = (chunkId) => (installedChunks[chunkId] === 0);
/******/ 		
/******/ 		// install a JSONP callback for chunk loading
/******/ 		var webpackJsonpCallback = (parentChunkLoadingFunction, data) => {
/******/ 			var [chunkIds, moreModules, runtime] = data;
/******/ 			// add "moreModules" to the modules object,
/******/ 			// then flag all "chunkIds" as loaded and fire callback
/******/ 			var moduleId, chunkId, i = 0;
/******/ 			if(chunkIds.some((id) => (installedChunks[id] !== 0))) {
/******/ 				for(moduleId in moreModules) {
/******/ 					if(__webpack_require__.o(moreModules, moduleId)) {
/******/ 						__webpack_require__.m[moduleId] = moreModules[moduleId];
/******/ 					}
/******/ 				}
/******/ 				if(runtime) var result = runtime(__webpack_require__);
/******/ 			}
/******/ 			if(parentChunkLoadingFunction) parentChunkLoadingFunction(data);
/******/ 			for(;i < chunkIds.length; i++) {
/******/ 				chunkId = chunkIds[i];
/******/ 				if(__webpack_require__.o(installedChunks, chunkId) && installedChunks[chunkId]) {
/******/ 					installedChunks[chunkId][0]();
/******/ 				}
/******/ 				installedChunks[chunkId] = 0;
/******/ 			}
/******/ 			return __webpack_require__.O(result);
/******/ 		}
/******/ 		
/******/ 		var chunkLoadingGlobal = self["webpackChunkportaldoespiao"] = self["webpackChunkportaldoespiao"] || [];
/******/ 		chunkLoadingGlobal.forEach(webpackJsonpCallback.bind(null, 0));
/******/ 		chunkLoadingGlobal.push = webpackJsonpCallback.bind(null, chunkLoadingGlobal.push.bind(chunkLoadingGlobal));
/******/ 	})();
/******/ 	
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module depends on other loaded chunks and execution need to be delayed
/******/ 	__webpack_require__.O(undefined, ["css/app"], () => (__webpack_require__("./src/js/app.js")))
/******/ 	var __webpack_exports__ = __webpack_require__.O(undefined, ["css/app"], () => (__webpack_require__("./src/scss/app.scss")))
/******/ 	__webpack_exports__ = __webpack_require__.O(__webpack_exports__);
/******/ 	
/******/ })()
;